/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers6';
import type { Signer, BigNumberish, ContractDeployTransaction, ContractRunner } from 'ethers6';
import type { NonPayableOverrides } from '../../../../../../../common';
import type {
  VRFCoordinatorV2Mock,
  VRFCoordinatorV2MockInterface,
} from '../../../../../../../@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_baseFee',
        type: 'uint96',
      },
      {
        internalType: 'uint96',
        name: '_gasPriceLink',
        type: 'uint96',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidConsumer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidRandomWords',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidSubscription',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'MustBeSubOwner',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Reentrant',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TooManyConsumers',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'ConfigSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint64',
        name: 'subId',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'consumer',
        type: 'address',
      },
    ],
    name: 'ConsumerAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint64',
        name: 'subId',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'consumer',
        type: 'address',
      },
    ],
    name: 'ConsumerRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferRequested',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'requestId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'outputSeed',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint96',
        name: 'payment',
        type: 'uint96',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'success',
        type: 'bool',
      },
    ],
    name: 'RandomWordsFulfilled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'keyHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'requestId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'preSeed',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint64',
        name: 'subId',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'minimumRequestConfirmations',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'callbackGasLimit',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'numWords',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RandomWordsRequested',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint64',
        name: 'subId',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'SubscriptionCanceled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint64',
        name: 'subId',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'SubscriptionCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint64',
        name: 'subId',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'oldBalance',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newBalance',
        type: 'uint256',
      },
    ],
    name: 'SubscriptionFunded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'BASE_FEE',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'GAS_PRICE_LINK',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_CONSUMERS',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    name: 'acceptSubscriptionOwnerTransfer',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_subId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_consumer',
        type: 'address',
      },
    ],
    name: 'addConsumer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_subId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
    ],
    name: 'cancelSubscription',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_subId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_consumer',
        type: 'address',
      },
    ],
    name: 'consumerIsAdded',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createSubscription',
    outputs: [
      {
        internalType: 'uint64',
        name: '_subId',
        type: 'uint64',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_requestId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_consumer',
        type: 'address',
      },
    ],
    name: 'fulfillRandomWords',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_requestId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_consumer',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: '_words',
        type: 'uint256[]',
      },
    ],
    name: 'fulfillRandomWordsWithOverride',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_subId',
        type: 'uint64',
      },
      {
        internalType: 'uint96',
        name: '_amount',
        type: 'uint96',
      },
    ],
    name: 'fundSubscription',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getConfig',
    outputs: [
      {
        internalType: 'uint16',
        name: 'minimumRequestConfirmations',
        type: 'uint16',
      },
      {
        internalType: 'uint32',
        name: 'maxGasLimit',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'stalenessSeconds',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'gasAfterPaymentCalculation',
        type: 'uint32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFallbackWeiPerUnitLink',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFeeConfig',
    outputs: [
      {
        internalType: 'uint32',
        name: 'fulfillmentFlatFeeLinkPPMTier1',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'fulfillmentFlatFeeLinkPPMTier2',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'fulfillmentFlatFeeLinkPPMTier3',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'fulfillmentFlatFeeLinkPPMTier4',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'fulfillmentFlatFeeLinkPPMTier5',
        type: 'uint32',
      },
      {
        internalType: 'uint24',
        name: 'reqsForTier2',
        type: 'uint24',
      },
      {
        internalType: 'uint24',
        name: 'reqsForTier3',
        type: 'uint24',
      },
      {
        internalType: 'uint24',
        name: 'reqsForTier4',
        type: 'uint24',
      },
      {
        internalType: 'uint24',
        name: 'reqsForTier5',
        type: 'uint24',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRequestConfig',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_subId',
        type: 'uint64',
      },
    ],
    name: 'getSubscription',
    outputs: [
      {
        internalType: 'uint96',
        name: 'balance',
        type: 'uint96',
      },
      {
        internalType: 'uint64',
        name: 'reqCount',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'consumers',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    name: 'pendingRequestExists',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_subId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_consumer',
        type: 'address',
      },
    ],
    name: 'removeConsumer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_keyHash',
        type: 'bytes32',
      },
      {
        internalType: 'uint64',
        name: '_subId',
        type: 'uint64',
      },
      {
        internalType: 'uint16',
        name: '_minimumRequestConfirmations',
        type: 'uint16',
      },
      {
        internalType: 'uint32',
        name: '_callbackGasLimit',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numWords',
        type: 'uint32',
      },
    ],
    name: 'requestRandomWords',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'requestSubscriptionOwnerTransfer',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'setConfig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60e0604052606460c081905260016004556005553480156200002057600080fd5b5060405162001cd038038062001cd0833981016040819052620000439162000267565b33806000816200009a5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620000cd57620000cd81620000f5565b5050506001600160601b03808316608052811660a052620000ed620001a0565b50506200029f565b336001600160a01b038216036200014f5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640162000091565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b620001aa620001ec565b604080516020810182526000908190526002805460ff1916905590517f4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be9190a1565b6000546001600160a01b03163314620002485760405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015260640162000091565b565b80516001600160601b03811681146200026257600080fd5b919050565b600080604083850312156200027b57600080fd5b62000286836200024a565b915062000296602084016200024a565b90509250929050565b60805160a05160c0516119ec620002e4600039600081816102690152610aa601526000818161033501526106e00152600081816101ca015261072301526119ec6000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c80638b673e7a116100c3578063afc69b531161007c578063afc69b531461037a578063c3f909d41461038d578063d7ae1d30146103b8578063e82ad7d4146103cb578063ed5eb06d146103ee578063f2fde38b1461040157600080fd5b80638b673e7a146102da5780638da5cb5b146102e25780639f87fad7146102fd578063a21a23e414610310578063a410347f14610330578063a47c76961461035757600080fd5b80635fbbc0d2116101155780635fbbc0d21461021757806364d51a2a146102645780637341c10c1461029e57806379ba5097146102b1578063808974ff146102b957806382359740146102cc57600080fd5b80620122911461015c57806304c357cb1461018657806308e3898e1461019b578063356dac71146101ae5780633d18651e146101c55780635d3b1d3014610204575b600080fd5b6040805160008152602081019182905261017d91600391621e8480916114e8565b60405180910390f35b61019961019436600461157a565b610414565b005b6101996101a93660046115c3565b610453565b660e35fa931a00005b60405190815260200161017d565b6101ec7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160601b03909116815260200161017d565b6101b76102123660046116b0565b61086b565b60408051620186a080825260208201819052918101829052606081018290526080810191909152600060a0820181905260c0820181905260e082018190526101008201526101200161017d565b61028b7f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff909116815260200161017d565b6101996102ac36600461157a565b610a12565b610199610b73565b6101996102c7366004611717565b610c1d565b61019961019436600461173a565b610199610c61565b6000546040516001600160a01b03909116815260200161017d565b61019961030b36600461157a565b610cab565b610318610ee6565b6040516001600160401b03909116815260200161017d565b6101ec7f000000000000000000000000000000000000000000000000000000000000000081565b61036a61036536600461173a565b610fb6565b60405161017d949392919061175c565b6101996103883660046117d6565b6110a2565b6040805160048152622625a06020820152610a8c91810191909152618205606082015260800161017d565b6101996103c636600461157a565b61119e565b6103de6103d936600461173a565b6112c3565b604051901515815260200161017d565b6103de6103fc36600461157a565b611300565b61019961040f366004611819565b6113d6565b60405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081a5b5c1b195b595b9d1959608a1b60448201526064015b60405180910390fd5b60005a6000858152600860205260408120549192506001600160401b0390911690036104b75760405162461bcd60e51b81526020600482015260136024820152721b9bdb995e1a5cdd195b9d081c995c5d595cdd606a1b604482015260640161044a565b6000848152600860209081526040808320815160608101835290546001600160401b038116825263ffffffff600160401b8204811694830194909452600160601b90049092169082015283519091036105cf57806040015163ffffffff166001600160401b0381111561052c5761052c6115ad565b604051908082528060200260200182016040528015610555578160200160208202803683370190505b50925060005b816040015163ffffffff168110156105c95760408051602081018890529081018290526060016040516020818303038152906040528051906020012060001c8482815181106105ac576105ac611834565b6020908102919091010152806105c181611860565b91505061055b565b506105fa565b806040015163ffffffff168351146105fa57604051631f9efadb60e11b815260040160405180910390fd5b600080631fe543e360e01b8786604051602401610618929190611879565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b0319909516949094179093526002805460ff191660011790559185015191519092506000916001600160a01b0389169163ffffffff909116906106839085906118c7565b60006040518083038160008787f1925050503d80600081146106c1576040519150601f19603f3d011682016040523d82523d6000602084013e6106c6565b606091505b50506002805460ff19169055905060006001600160601b037f0000000000000000000000000000000000000000000000000000000000000000165a61070b90886118f6565b6107159190611909565b610748906001600160601b037f000000000000000000000000000000000000000000000000000000000000000016611920565b85516001600160401b03166000908152600660205260409020549091506001600160601b03808316600160a01b90920416101561079857604051631e9acf1760e31b815260040160405180910390fd5b84516001600160401b0316600090815260066020526040902080548291906014906107d4908490600160a01b90046001600160601b0316611933565b82546101009290920a6001600160601b0381810219909316918316021790915560008b81526008602090815260409182902080546fffffffffffffffffffffffffffffffff1916905581518d815292851690830152841515908201528a91507f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e49060600160405180910390a2505050505050505050565b60025460009060ff16156108925760405163769dd35360e11b815260040160405180910390fd5b843361089e8282611300565b6108bb576040516371e8313760e01b815260040160405180910390fd5b6001600160401b0387166000908152600660205260409020546001600160a01b03166108fa57604051630fb532db60e11b815260040160405180910390fd5b600480546000918261090b83611860565b9091555060058054919250600091908261092483611860565b9091555060408051606080820183526001600160401b038d811680845263ffffffff8d811660208087018281528f8416888a0181815260008e8152600885528b902099518a54935191518716600160601b0263ffffffff60601b1992909716600160401b026bffffffffffffffffffffffff19909416981697909717919091179590951692909217909555855189815290810187905261ffff8f16818701529283019390935260808201529151929350339290918d917f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a97729160a0908290030190a45098975050505050505050565b6001600160401b03821660009081526006602052604090205482906001600160a01b031680610a5457604051630fb532db60e11b815260040160405180910390fd5b336001600160a01b03821614610a8857604051636c51fda960e11b81526001600160a01b038216600482015260240161044a565b6001600160401b03841660009081526007602052604090205461ffff7f0000000000000000000000000000000000000000000000000000000000000000169003610ae5576040516305a48e0f60e01b815260040160405180910390fd5b610aef8484611300565b610b6d576001600160401b038416600081815260076020908152604080832080546001810182559084529282902090920180546001600160a01b0319166001600160a01b03881690811790915591519182527f752ead9f4536ec1319ee3a5a604e1d65eded22e0924251552ba14ae4faa1bbc3910160405180910390a25b50505050565b6001546001600160a01b03163314610bc65760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b604482015260640161044a565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b60025460ff1615610c415760405163769dd35360e11b815260040160405180910390fd5b604080516000815260208101909152610c5d9083908390610453565b5050565b610c696113ea565b604080516020810182526000908190526002805460ff1916905590517f4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be9190a1565b6001600160401b03821660009081526006602052604090205482906001600160a01b031680610ced57604051630fb532db60e11b815260040160405180910390fd5b336001600160a01b03821614610d2157604051636c51fda960e11b81526001600160a01b038216600482015260240161044a565b8383610d2d8282611300565b610d4a576040516371e8313760e01b815260040160405180910390fd5b60025460ff1615610d6e5760405163769dd35360e11b815260040160405180910390fd5b6001600160401b0386166000908152600760205260408120905b8154811015610e9557866001600160a01b0316828281548110610dad57610dad611834565b6000918252602090912001546001600160a01b031603610e835781546000908390610dda906001906118f6565b81548110610dea57610dea611834565b9060005260206000200160009054906101000a90046001600160a01b0316905080838381548110610e1d57610e1d611834565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082805480610e5b57610e5b61195a565b600082815260209020810160001990810180546001600160a01b031916905501905550610e95565b80610e8d81611860565b915050610d88565b506040516001600160a01b03871681526001600160401b038816907ff9bc9d5b5733d904409def43a5ecc888dbdac9a95687780d8fd489d3bb3813fc9060200160405180910390a250505050505050565b600380546000916001600160401b039091169082610f0383611970565b82546001600160401b039182166101009390930a928302928202191691909117909155604080518082018252338082526000602080840182815260038054881684526006835292869020945190516001600160601b0316600160a01b026001600160a01b03909116179093555492519081529190921692507f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf910160405180910390a2506003546001600160401b031690565b6001600160401b038116600090815260066020526040812054819081906060906001600160a01b0316610ffc57604051630fb532db60e11b815260040160405180910390fd5b6001600160401b0385166000908152600660209081526040808320546007835281842080548351818602810186019094528084526001600160601b03600160a01b84041695946001600160a01b0390931693919283919083018282801561108c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161106e575b5050505050905093509350935093509193509193565b6001600160401b0382166000908152600660205260409020546001600160a01b03166110e157604051630fb532db60e11b815260040160405180910390fd5b6001600160401b03821660009081526006602052604090208054600160a01b90046001600160601b0316908290601461111a8385611996565b92506101000a8154816001600160601b0302191690836001600160601b03160217905550826001600160401b03167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f88284846111769190611996565b604080516001600160601b0393841681529290911660208301520160405180910390a2505050565b6001600160401b03821660009081526006602052604090205482906001600160a01b0316806111e057604051630fb532db60e11b815260040160405180910390fd5b336001600160a01b0382161461121457604051636c51fda960e11b81526001600160a01b038216600482015260240161044a565b60025460ff16156112385760405163769dd35360e11b815260040160405180910390fd5b6001600160401b0384166000818152600660209081526040918290205482516001600160a01b0388168152600160a01b9091046001600160601b0316918101919091527fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd49815910160405180910390a25050506001600160401b0316600090815260066020526040812055565b60405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081a5b5c1b195b595b9d1959608a1b604482015260009060640161044a565b6001600160401b03821660009081526007602090815260408083208054825181850281018501909352808352849383018282801561136757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611349575b5050505050905060005b81518110156113c957836001600160a01b031682828151811061139657611396611834565b60200260200101516001600160a01b0316036113b7576001925050506113d0565b806113c181611860565b915050611371565b5060009150505b92915050565b6113de6113ea565b6113e78161143f565b50565b6000546001600160a01b0316331461143d5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b604482015260640161044a565b565b336001600160a01b038216036114975760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161044a565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006060820161ffff86168352602063ffffffff86168185015260606040850152818551808452608086019150828701935060005b818110156115395784518352938301939183019160010161151d565b509098975050505050505050565b80356001600160401b038116811461155e57600080fd5b919050565b80356001600160a01b038116811461155e57600080fd5b6000806040838503121561158d57600080fd5b61159683611547565b91506115a460208401611563565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156115d857600080fd5b8335925060206115e9818601611563565b925060408501356001600160401b038082111561160557600080fd5b818701915087601f83011261161957600080fd5b81358181111561162b5761162b6115ad565b8060051b604051601f19603f83011681018181108582111715611650576116506115ad565b60405291825284820192508381018501918a83111561166e57600080fd5b938501935b8285101561168c57843584529385019392850192611673565b8096505050505050509250925092565b803563ffffffff8116811461155e57600080fd5b600080600080600060a086880312156116c857600080fd5b853594506116d860208701611547565b9350604086013561ffff811681146116ef57600080fd5b92506116fd6060870161169c565b915061170b6080870161169c565b90509295509295909350565b6000806040838503121561172a57600080fd5b823591506115a460208401611563565b60006020828403121561174c57600080fd5b61175582611547565b9392505050565b6000608082016001600160601b038716835260206001600160401b0387168185015260018060a01b0380871660408601526080606086015282865180855260a087019150838801945060005b818110156117c65785518416835294840194918401916001016117a8565b50909a9950505050505050505050565b600080604083850312156117e957600080fd5b6117f283611547565b915060208301356001600160601b038116811461180e57600080fd5b809150509250929050565b60006020828403121561182b57600080fd5b61175582611563565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016118725761187261184a565b5060010190565b6000604082018483526020604081850152818551808452606086019150828701935060005b818110156118ba5784518352938301939183019160010161189e565b5090979650505050505050565b6000825160005b818110156118e857602081860181015185830152016118ce565b506000920191825250919050565b818103818111156113d0576113d061184a565b80820281158282048414176113d0576113d061184a565b808201808211156113d0576113d061184a565b6001600160601b038281168282160390808211156119535761195361184a565b5092915050565b634e487b7160e01b600052603160045260246000fd5b60006001600160401b0380831681810361198c5761198c61184a565b6001019392505050565b6001600160601b038181168382160190808211156119535761195361184a56fea26469706673582212208b5ef13ab4c226f33d2e9e53fa8fa78127b8c4ac10f007c19489c586599f5c3c64736f6c63430008130033';

type VRFCoordinatorV2MockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: VRFCoordinatorV2MockConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class VRFCoordinatorV2Mock__factory extends ContractFactory {
  constructor(...args: VRFCoordinatorV2MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _baseFee: BigNumberish,
    _gasPriceLink: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_baseFee, _gasPriceLink, overrides || {});
  }
  override deploy(
    _baseFee: BigNumberish,
    _gasPriceLink: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(_baseFee, _gasPriceLink, overrides || {}) as Promise<
      VRFCoordinatorV2Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VRFCoordinatorV2Mock__factory {
    return super.connect(runner) as VRFCoordinatorV2Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFCoordinatorV2MockInterface {
    return new Interface(_abi) as VRFCoordinatorV2MockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VRFCoordinatorV2Mock {
    return new Contract(address, _abi, runner) as unknown as VRFCoordinatorV2Mock;
  }
}
