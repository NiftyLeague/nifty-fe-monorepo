/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../../common';
import type { Store, StoreInterface } from '../../../../src/contracts/imx/Store';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
    ],
    name: 'ItemsMinted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'NftlSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'marketplace_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'nftl_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'treasury_',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'itemId',
        type: 'uint256',
      },
    ],
    name: 'isAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: 'paused',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'itemIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'prices',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'supply',
        type: 'uint256[]',
      },
    ],
    name: 'listNewItems',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'itemId',
        type: 'uint256',
      },
    ],
    name: 'listingPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'marketplace',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'itemId',
        type: 'uint256',
      },
    ],
    name: 'maxSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: 'maxSupply',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nftl',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'itemIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'itemValues',
        type: 'uint256[]',
      },
    ],
    name: 'purchaseItems',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'holder',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'itemIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'itemValues',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Store.Signature',
        name: 'sig',
        type: 'tuple',
      },
    ],
    name: 'purchaseItemsForWithPermit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'itemIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'itemValues',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Store.Signature',
        name: 'sig',
        type: 'tuple',
      },
    ],
    name: 'purchaseItemsWithPermit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'itemIds',
        type: 'uint256[]',
      },
      {
        internalType: 'bool[]',
        name: 'availability',
        type: 'bool[]',
      },
    ],
    name: 'setItemsAvailability',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'itemIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'supply',
        type: 'uint256[]',
      },
    ],
    name: 'setItemsMaxSupply',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'itemIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'prices',
        type: 'uint256[]',
      },
    ],
    name: 'setItemsPrice',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'sig',
        type: 'bytes',
      },
    ],
    name: 'splitSignature',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Store.Signature',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treasury',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'treasury_',
        type: 'address',
      },
    ],
    name: 'updateTreasury',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50611b07806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638456cb59116100b8578063abc8c7af1161007c578063abc8c7af146102d8578063c0c53b8b146102eb578063c8b2d66c146102fe578063d4b77e4414610311578063ddbaea8f14610324578063f2fde38b1461033757600080fd5b80638456cb5914610254578063869f75941461025c5780638da5cb5b1461027c5780639c37f7651461028d578063a7bb5803146102a057600080fd5b80633f4ba83a1161010a5780633f4ba83a146101e85780634e81da0a146101f05780635c975abb1461021b57806361d027b314610226578063715018a6146102395780637f51bb1f1461024157600080fd5b8063115bc936146101475780631d8d71f01461017a5780632b11dcc31461018f5780632dca91ef146101a25780633a178d99146101b5575b600080fd5b61016761015536600461143c565b60cc6020526000908152604090205481565b6040519081526020015b60405180910390f35b61018d6101883660046114a1565b61034a565b005b61018d61019d3660046114a1565b610377565b61018d6101b03660046114a1565b610436565b6101d86101c336600461143c565b60ce6020526000908152604090205460ff1681565b6040519015158152602001610171565b61018d6104c3565b60ca54610203906001600160a01b031681565b6040516001600160a01b039091168152602001610171565b60655460ff166101d8565b60cb54610203906001600160a01b031681565b61018d6104d5565b61018d61024f366004611529565b6104e7565b61018d610563565b61016761026a36600461143c565b60cd6020526000908152604090205481565b6033546001600160a01b0316610203565b61018d61029b36600461154b565b610573565b6102b36102ae3660046115e5565b6106a3565b60408051825160ff168152602080840151908201529181015190820152606001610171565b60c954610203906001600160a01b031681565b61018d6102f9366004611657565b61072b565b61018d61030c3660046116b2565b61097b565b61018d61031f3660046114a1565b610a3c565b61018d610332366004611746565b610ac9565b61018d610345366004611529565b610b7c565b610352610bf5565b61035a610c4e565b6103673385858585610c94565b6103716001609755565b50505050565b61037f61114b565b828181146103a95760405163d647364f60e01b81526004016103a0906117eb565b60405180910390fd5b60005b8181101561042e578383828181106103c6576103c6611820565b90506020020160208101906103db9190611844565b60ce60008888858181106103f1576103f1611820565b90506020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055508061042790611877565b90506103ac565b505050505050565b61043e61114b565b8281811461045f5760405163d647364f60e01b81526004016103a0906117eb565b60005b8181101561042e5783838281811061047c5761047c611820565b9050602002013560cd600088888581811061049957610499611820565b90506020020135815260200190815260200160002081905550806104bc90611877565b9050610462565b6104cb61114b565b6104d36111a5565b565b6104dd61114b565b6104d360006111f7565b6104ef61114b565b6001600160a01b0381166105415760405163d647364f60e01b8152602060048201526018602482015277496e76616c6964205472656173757279206164647265737360401b60448201526064016103a0565b60cb80546001600160a01b0319166001600160a01b0392909216919091179055565b61056b61114b565b6104d3611249565b61057b61114b565b84838114158061058b5750808214155b156105a95760405163d647364f60e01b81526004016103a0906117eb565b60005b81811015610699578585828181106105c6576105c6611820565b9050602002013560cc60008a8a858181106105e3576105e3611820565b9050602002013581526020019081526020016000208190555083838281811061060e5761060e611820565b9050602002013560cd60008a8a8581811061062b5761062b611820565b90506020020135815260200190815260200160002081905550600160ce60008a8a8581811061065c5761065c611820565b90506020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055508061069290611877565b90506105ac565b5050505050505050565b60408051606080820183526000808352602083018190528284015282519081018352909181906106d7906041908688611890565b6106e0916118ba565b60f81c81526020908101906106f89060008688611890565b610701916118ea565b8152602090810190610717906040908688611890565b610720916118ea565b905290505b92915050565b600054610100900460ff161580801561074b5750600054600160ff909116105b806107655750303b158015610765575060005460ff166001145b6107c85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103a0565b6000805460ff1916600117905580156107eb576000805461ff0019166101001790555b6001600160a01b03841661083b5760405163d647364f60e01b8152602060048201526016602482015275496e76616c696420636f6d696373206164647265737360501b60448201526064016103a0565b6001600160a01b0383166108895760405163d647364f60e01b8152602060048201526014602482015273496e76616c6964204e46544c206164647265737360601b60448201526064016103a0565b6001600160a01b0382166108db5760405163d647364f60e01b8152602060048201526018602482015277496e76616c6964205472656173757279206164647265737360401b60448201526064016103a0565b6108e3611286565b6108eb6112b5565b6108f36112e4565b60c980546001600160a01b038087166001600160a01b03199283161790925560ca805486841690831617905560cb8054928516929091169190911790558015610371576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b610983610bf5565b61098b610c4e565b3360ca548490849084906001600160a01b031663d505accf853086866109b46020880188611908565b876020013588604001356040518863ffffffff1660e01b81526004016109e0979695949392919061192b565b600060405180830381600087803b1580156109fa57600080fd5b505af1158015610a0e573d6000803e3d6000fd5b50505050610a25610a1c3390565b8c8c8c8c610c94565b50505050610a336001609755565b50505050505050565b610a4461114b565b82818114610a655760405163d647364f60e01b81526004016103a0906117eb565b60005b8181101561042e57838382818110610a8257610a82611820565b9050602002013560cc6000888885818110610a9f57610a9f611820565b9050602002013581526020019081526020016000208190555080610ac290611877565b9050610a68565b610ad1610bf5565b610ad9610c4e565b60ca5488908490849084906001600160a01b031663d505accf85308686610b036020880188611908565b876020013588604001356040518863ffffffff1660e01b8152600401610b2f979695949392919061192b565b600060405180830381600087803b158015610b4957600080fd5b505af1158015610b5d573d6000803e3d6000fd5b50505050610b6e8c8c8c8c8c610c94565b505050506106996001609755565b610b8461114b565b6001600160a01b038116610be95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103a0565b610bf2816111f7565b50565b600260975403610c475760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103a0565b6002609755565b60655460ff16156104d35760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103a0565b828114610cb45760405163d647364f60e01b81526004016103a0906117eb565b60008381805b82811015610f335760ce6000898984818110610cd857610cd8611820565b602090810292909201358352508101919091526040016000205460ff16610d375760405163d647364f60e01b81526020600482015260126024820152714974656d206e6f7420617661696c61626c6560701b60448201526064016103a0565b6000868683818110610d4b57610d4b611820565b60c9546020909102929092013592506000918391506001600160a01b031663bd85b0398c8c87818110610d8057610d80611820565b905060200201356040518263ffffffff1660e01b8152600401610da591815260200190565b602060405180830381865afa158015610dc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de6919061196c565b610df09190611985565b90508060cd60008c8c87818110610e0957610e09611820565b905060200201358152602001908152602001600020541015610e655760405163d647364f60e01b8152602060048201526014602482015273125d195b481cdd5c1c1b1e48195e18d95959195960621b60448201526064016103a0565b8060cd60008c8c87818110610e7c57610e7c611820565b9050602002013581526020019081526020016000205403610edc57600060ce60008c8c87818110610eaf57610eaf611820565b90506020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055505b81610efe8b8b86818110610ef257610ef2611820565b90506020020135611313565b610f089190611998565b610f129087611985565b9550610f1e8285611985565b9350505080610f2c90611877565b9050610cba565b5080600003610f785760405163d647364f60e01b815260206004820152601060248201526f139bc81a5d195b5cc81d1bc81b5a5b9d60821b60448201526064016103a0565b60ca5460cb546040516323b872dd60e01b81526001600160a01b038b8116600483015291821660248201526044810186905260009291909116906323b872dd906064016020604051808303816000875af1158015610fda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffe91906119af565b9050806110455760405163d647364f60e01b815260206004820152601460248201527313919513081d1c985b9cd9995c8819985a5b195960621b60448201526064016103a0565b886001600160a01b03167fdb1ec22ae6876ab00722f5391237e16a1f05ab36d318dd49ab486a1a53403d888560405161108091815260200190565b60405180910390a260c954604051631873bfdb60e31b81526001600160a01b039091169063c39dfed8906110c0908c908c908c908c908c906004016119fe565b600060405180830381600087803b1580156110da57600080fd5b505af11580156110ee573d6000803e3d6000fd5b50505050886001600160a01b03167f23519238b590c499a2abcf44a33b5f431ac6ca51c22fad26bc2c3d08b97eaa21898989896040516111319493929190611a54565b60405180910390a2505050505050505050565b6001609755565b6033546001600160a01b031633146104d35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a0565b6111ad611369565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611251610c4e565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111da3390565b600054610100900460ff166112ad5760405162461bcd60e51b81526004016103a090611a86565b6104d36113b2565b600054610100900460ff166112dc5760405162461bcd60e51b81526004016103a090611a86565b6104d36113e2565b600054610100900460ff1661130b5760405162461bcd60e51b81526004016103a090611a86565b6104d3611409565b600081815260cc60205260408120548082036107255760405163d647364f60e01b8152602060048201526014602482015273125d195b481c1c9a58d9481b9bdd08199bdd5b9960621b60448201526064016103a0565b60655460ff166104d35760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103a0565b600054610100900460ff166113d95760405162461bcd60e51b81526004016103a090611a86565b6104d3336111f7565b600054610100900460ff166111445760405162461bcd60e51b81526004016103a090611a86565b600054610100900460ff166114305760405162461bcd60e51b81526004016103a090611a86565b6065805460ff19169055565b60006020828403121561144e57600080fd5b5035919050565b60008083601f84011261146757600080fd5b50813567ffffffffffffffff81111561147f57600080fd5b6020830191508360208260051b850101111561149a57600080fd5b9250929050565b600080600080604085870312156114b757600080fd5b843567ffffffffffffffff808211156114cf57600080fd5b6114db88838901611455565b909650945060208701359150808211156114f457600080fd5b5061150187828801611455565b95989497509550505050565b80356001600160a01b038116811461152457600080fd5b919050565b60006020828403121561153b57600080fd5b6115448261150d565b9392505050565b6000806000806000806060878903121561156457600080fd5b863567ffffffffffffffff8082111561157c57600080fd5b6115888a838b01611455565b909850965060208901359150808211156115a157600080fd5b6115ad8a838b01611455565b909650945060408901359150808211156115c657600080fd5b506115d389828a01611455565b979a9699509497509295939492505050565b600080602083850312156115f857600080fd5b823567ffffffffffffffff8082111561161057600080fd5b818501915085601f83011261162457600080fd5b81358181111561163357600080fd5b86602082850101111561164557600080fd5b60209290920196919550909350505050565b60008060006060848603121561166c57600080fd5b6116758461150d565b92506116836020850161150d565b91506116916040850161150d565b90509250925092565b6000606082840312156116ac57600080fd5b50919050565b600080600080600080600060e0888a0312156116cd57600080fd5b873567ffffffffffffffff808211156116e557600080fd5b6116f18b838c01611455565b909950975060208a013591508082111561170a57600080fd5b506117178a828b01611455565b90965094505060408801359250606088013591506117388960808a0161169a565b905092959891949750929550565b600080600080600080600080610100898b03121561176357600080fd5b61176c8961150d565b9750602089013567ffffffffffffffff8082111561178957600080fd5b6117958c838d01611455565b909950975060408b01359150808211156117ae57600080fd5b506117bb8b828c01611455565b90965094505060608901359250608089013591506117dc8a60a08b0161169a565b90509295985092959890939650565b6020808252818101527f417272617973206d7573742068617665207468652073616d65206c656e677468604082015260600190565b634e487b7160e01b600052603260045260246000fd5b8015158114610bf257600080fd5b60006020828403121561185657600080fd5b813561154481611836565b634e487b7160e01b600052601160045260246000fd5b60006001820161188957611889611861565b5060010190565b600080858511156118a057600080fd5b838611156118ad57600080fd5b5050820193919092039150565b6001600160f81b031981358181169160018510156118e25780818660010360031b1b83161692505b505092915050565b8035602083101561072557600019602084900360031b1b1692915050565b60006020828403121561191a57600080fd5b813560ff8116811461154457600080fd5b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b60006020828403121561197e57600080fd5b5051919050565b8082018082111561072557610725611861565b808202811582820484141761072557610725611861565b6000602082840312156119c157600080fd5b815161154481611836565b81835260006001600160fb1b038311156119e557600080fd5b8260051b80836020870137939093016020019392505050565b6001600160a01b0386168152608060208201819052600090611a2390830186886119cc565b8281036040840152611a368185876119cc565b83810360609094019390935250506000815260200195945050505050565b604081526000611a686040830186886119cc565b8281036020840152611a7b8185876119cc565b979650505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122094b8ee3083bb93ae27d0694bf8e975080c4621f322a41f09bbbf12fb489fd46e64736f6c63430008130033';

type StoreConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: StoreConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Store__factory extends ContractFactory {
  constructor(...args: StoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Store & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Store__factory {
    return super.connect(runner) as Store__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StoreInterface {
    return new Interface(_abi) as StoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Store {
    return new Contract(address, _abi, runner) as unknown as Store;
  }
}
