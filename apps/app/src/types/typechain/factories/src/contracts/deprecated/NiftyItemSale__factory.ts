/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers6';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers6';
import type { NonPayableOverrides } from '../../../../common';
import type { NiftyItemSale, NiftyItemSaleInterface } from '../../../../src/contracts/deprecated/NiftyItemSale';

const _abi = [
  { inputs: [{ internalType: 'string', name: 'message', type: 'string' }], name: 'AddressError', type: 'error' },
  { inputs: [{ internalType: 'string', name: 'message', type: 'string' }], name: 'InputError', type: 'error' },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint8', name: 'version', type: 'uint8' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'by', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'itemId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'oldLimitCount', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'newLimitCount', type: 'uint256' },
    ],
    name: 'ItemLimitUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'by', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'itemId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'oldItemMaxCount', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'newItemMaxCount', type: 'uint256' },
    ],
    name: 'ItemMaxCountSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'by', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'itemId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'oldItemPrice', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'newItemPrice', type: 'uint256' },
    ],
    name: 'ItemPriceSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'by', type: 'address' },
      { indexed: false, internalType: 'uint256[]', name: 'itemIds', type: 'uint256[]' },
      { indexed: false, internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },
    ],
    name: 'ItemPurchased',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'by', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'burnAmount', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'treasuryAmount', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'daoAmount', type: 'uint256' },
    ],
    name: 'NFTLWithdraw',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'by', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'oldBurnPercentage', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'oldTreasuryPercentage', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'oldDAOPercentage', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'newBurnPercentage', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'newTreasuryPercentage', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'newDAOPercentage', type: 'uint256' },
    ],
    name: 'TokenPercentagesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: 'burnPercentage',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dao',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'daoPercentage',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_itemId', type: 'uint256' }],
    name: 'getRemainingItemCount',
    outputs: [{ internalType: 'uint256', name: 'count', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_items', type: 'address' },
      { internalType: 'address', name: '_nftl', type: 'address' },
      { internalType: 'address', name: '_treasury', type: 'address' },
      { internalType: 'address', name: '_dao', type: 'address' },
      { internalType: 'uint256', name: '_burnPercentage', type: 'uint256' },
      { internalType: 'uint256', name: '_treasuryPercentage', type: 'uint256' },
      { internalType: 'uint256', name: '_daoPercentage', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'itemId', type: 'uint256' }],
    name: 'itemLimitPerAdress',
    outputs: [{ internalType: 'uint256', name: 'limit', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'itemId', type: 'uint256' }],
    name: 'itemMaxCounts',
    outputs: [{ internalType: 'uint256', name: 'count', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'itemId', type: 'uint256' }],
    name: 'itemPrices',
    outputs: [{ internalType: 'uint256', name: 'amount', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'items',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nftl',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'pause', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [],
    name: 'paused',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: '_itemIds', type: 'uint256[]' },
      { internalType: 'uint256[]', name: '_amounts', type: 'uint256[]' },
    ],
    name: 'purchaseItems',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'uint256', name: '_itemId', type: 'uint256' },
      { internalType: 'uint256', name: '_limitCount', type: 'uint256' },
    ],
    name: 'setItemLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: '_itemIds', type: 'uint256[]' },
      { internalType: 'uint256[]', name: '_maxCounts', type: 'uint256[]' },
    ],
    name: 'setItemMaxCounts',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: '_itemIds', type: 'uint256[]' },
      { internalType: 'uint256[]', name: '_nftlAmounts', type: 'uint256[]' },
    ],
    name: 'setItemPrices',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treasury',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treasuryPercentage',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'unpause', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'uint256', name: '_burnPercentage', type: 'uint256' },
      { internalType: 'uint256', name: '_treasuryPercentage', type: 'uint256' },
      { internalType: 'uint256', name: '_daoPercentage', type: 'uint256' },
    ],
    name: 'updateTokenPercentages',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'withdraw', outputs: [], stateMutability: 'nonpayable', type: 'function' },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50611cee806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80637ab56083116100c3578063bf91ad9e1161007c578063bf91ad9e146102ae578063bf9dc86a146102ce578063c06fad06146102ee578063e77fc7a414610301578063f01f20df14610314578063f2fde38b1461031d57600080fd5b80637ab560831461025d5780638456cb5914610266578063868661cb1461026e5780638da5cb5b1461027757806396e851ab14610288578063b82a94131461029b57600080fd5b80633f4ba83a116101155780633f4ba83a146101e65780634162169f146101ee5780634e81da0a146102195780635c975abb1461022c57806361d027b314610242578063715018a61461025557600080fd5b8063010897661461015d5780630e22d59b146101905780630e55d70c146101a55780631d8d71f0146101b85780633ccfd60b146101cb5780633f46baab146101d3575b600080fd5b61017d61016b366004611866565b60cd6020526000908152604090205481565b6040519081526020015b60405180910390f35b6101a361019e36600461187f565b610330565b005b6101a36101b33660046118f7565b610407565b6101a36101c63660046118f7565b61060e565b6101a361092d565b61017d6101e1366004611866565b610ad7565b6101a3610b64565b60cf54610201906001600160a01b031681565b6040516001600160a01b039091168152602001610187565b60ca54610201906001600160a01b031681565b60975460ff166040519015158152602001610187565b60ce54610201906001600160a01b031681565b6101a3610b76565b61017d60d15481565b6101a3610b88565b61017d60d25481565b6033546001600160a01b0316610201565b6101a36102963660046118f7565b610b98565b6101a36102a9366004611963565b610e1e565b61017d6102bc366004611866565b60cb6020526000908152604090205481565b61017d6102dc366004611866565b60cc6020526000908152604090205481565b60c954610201906001600160a01b031681565b6101a361030f3660046119a1565b610e89565b61017d60d05481565b6101a361032b366004611a10565b6111a7565b610338611220565b806103438385611a48565b61034d9190611a48565b6103e8146103995760405163cbf2a2c760e01b8152602060048201526013602482015272496e76616c69642070657263656e746167657360681b60448201526064015b60405180910390fd5b60d05460d15460d25460408051938452602084019290925290820152606081018490526080810183905260a0810182905233907fe40b11ca40e9f152af537db8dc8c682648bd89d6cad4587db31993922b5a7e7d9060c00160405180910390a260d09290925560d15560d255565b61040f611220565b828181146104305760405163cbf2a2c760e01b815260040161039090611a5b565b60005b8181101561060657600686868381811061044f5761044f611a86565b905060200201351161049b5760405163cbf2a2c760e01b8152602060048201526014602482015273546f6b656e204944206c657373207468616e203760601b6044820152606401610390565b670de0b6b3a76400008484838181106104b6576104b6611a86565b9050602002013510156105055760405163cbf2a2c760e01b8152602060048201526016602482015275141c9a58d9481b195cdcc81d1a185b880c481391951360521b6044820152606401610390565b337f68d829accea5a50e994ba8f0db95e96cb144e8518d7253e83b89e7b99a8cf70087878481811061053957610539611a86565b9050602002013560cb60008a8a8781811061055657610556611a86565b9050602002013581526020019081526020016000205487878681811061057e5761057e611a86565b905060200201356040516105a5939291909283526020830191909152604082015260600190565b60405180910390a28383828181106105bf576105bf611a86565b9050602002013560cb60008888858181106105dc576105dc611a86565b90506020020135815260200190815260200160002081905550806105ff90611a9c565b9050610433565b505050505050565b61061661127a565b61061e6112d3565b8281811461063f5760405163cbf2a2c760e01b815260040161039090611a5b565b6000806000805b848110156108415788888281811061066057610660611a86565b90506020020135925086868281811061067b5761067b611a86565b90506020020135915060cb6000848152602001908152602001600020546000036106d55760405163cbf2a2c760e01b815260206004820152600a6024820152695a65726f20707269636560b01b6044820152606401610390565b6106de83610ad7565b82111561072e5760405163cbf2a2c760e01b815260206004820152601860248201527f52656d61696e696e6720636f756e74206f766572666c6f7700000000000000006044820152606401610390565b600083815260cd602052604090205480156108095760c954604051627eeac760e11b8152336004820152602481018690526000916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b59190611ab5565b9050816107c28583611a48565b11156108075760405163cbf2a2c760e01b81526020600482015260136024820152724974656d206c696d6974206f766572666c6f7760681b6044820152606401610390565b505b600084815260cb6020526040902054610823908490611ace565b61082d9086611a48565b9450508061083a90611a9c565b9050610646565b5060ca5461085a906001600160a01b0316333086611319565b60c95460408051602081018252600081529051630fbfeffd60e11b81526001600160a01b0390921691631f7fdffa916108a09133918d918d918d918d9190600401611b67565b600060405180830381600087803b1580156108ba57600080fd5b505af11580156108ce573d6000803e3d6000fd5b50505050336001600160a01b03167f2984a062306d2c08d91ade1337420532e9438d57c2dd5b19b7cb3dbb17230c94898989896040516109119493929190611bc0565b60405180910390a2505050506109276001606555565b50505050565b610935611220565b60ca546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190611ab5565b905060006103e860d054836109b79190611ace565b6109c19190611be7565b905060006103e860d154846109d69190611ace565b6109e09190611be7565b90506000816109ef8486611c09565b6109f99190611c09565b604080518581526020810185905290810182905290915033907f8db937e149e96ff1f57bb85e6f4896a085d8b904bcefee99f1742c20437f77879060600160405180910390a260ca54604051630852cd8d60e31b8152600481018590526001600160a01b03909116906342966c6890602401600060405180830381600087803b158015610a8557600080fd5b505af1158015610a99573d6000803e3d6000fd5b505060ce5460ca54610aba93506001600160a01b039081169250168461138b565b60cf5460ca54610927916001600160a01b0391821691168361138b565b60c95460405163bd85b03960e01b8152600481018390526000916001600160a01b03169063bd85b03990602401602060405180830381865afa158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b459190611ab5565b600083815260cc6020526040902054610b5e9190611c09565b92915050565b610b6c611220565b610b746113c0565b565b610b7e611220565b610b746000611412565b610b90611220565b610b74611464565b610ba0611220565b82818114610bc15760405163cbf2a2c760e01b815260040161039090611a5b565b60005b81811015610606576006868683818110610be057610be0611a86565b9050602002013511610c2c5760405163cbf2a2c760e01b8152602060048201526014602482015273546f6b656e204944206c657373207468616e203760601b6044820152606401610390565b60c9546001600160a01b031663bd85b039878784818110610c4f57610c4f611a86565b905060200201356040518263ffffffff1660e01b8152600401610c7491815260200190565b602060405180830381865afa158015610c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb59190611ab5565b848483818110610cc757610cc7611a86565b905060200201351015610d1d5760405163cbf2a2c760e01b815260206004820181905260248201527f4d617820636f756e74206c657373207468616e20746f74616c20737570706c796044820152606401610390565b337ff28265c485be16f26bcbad6982414412aa39c7d6d4b5523d38eee7938f04665c878784818110610d5157610d51611a86565b9050602002013560cc60008a8a87818110610d6e57610d6e611a86565b90506020020135815260200190815260200160002054878786818110610d9657610d96611a86565b90506020020135604051610dbd939291909283526020830191909152604082015260600190565b60405180910390a2838382818110610dd757610dd7611a86565b9050602002013560cc6000888885818110610df457610df4611a86565b9050602002013581526020019081526020016000208190555080610e1790611a9c565b9050610bc4565b610e26611220565b600082815260cd60209081526040918290205482518581529182015290810182905233907f5531364a0d55aafe58acbe657d9b99102de6db552982a198bd263ef59efc36839060600160405180910390a2600091825260cd602052604090912055565b600054610100900460ff1615808015610ea95750600054600160ff909116105b80610ec35750303b158015610ec3575060005460ff166001145b610f265760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610390565b6000805460ff191660011790558015610f49576000805461ff0019166101001790555b610f516114a1565b610f596114d0565b610f616114ff565b81610f6c8486611a48565b610f769190611a48565b6103e814610fbd5760405163cbf2a2c760e01b8152602060048201526013602482015272496e76616c69642070657263656e746167657360681b6044820152606401610390565b6001600160a01b03881661100c5760405163fb741fb960e01b8152602060048201526015602482015274496e76616c6964206974656d73206164647265737360581b6044820152606401610390565b6001600160a01b03871661105a5760405163fb741fb960e01b8152602060048201526014602482015273496e76616c6964206e66746c206164647265737360601b6044820152606401610390565b6001600160a01b0386166110b15760405163fb741fb960e01b815260206004820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606401610390565b6001600160a01b0385166110fe5760405163fb741fb960e01b8152602060048201526013602482015272496e76616c69642064616f206164647265737360681b6044820152606401610390565b60c980546001600160a01b03808b166001600160a01b03199283161790925560ca80548a841690831617905560ce805489841690831617905560cf80549288169290911691909117905560d084905560d183905560d2829055801561119d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6111af611220565b6001600160a01b0381166112145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610390565b61121d81611412565b50565b6033546001600160a01b03163314610b745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610390565b6002606554036112cc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610390565b6002606555565b60975460ff1615610b745760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610390565b6040516001600160a01b03808516602483015283166044820152606481018290526109279085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261152e565b6001606555565b6040516001600160a01b0383166024820152604481018290526113bb90849063a9059cbb60e01b9060640161134d565b505050565b6113c8611603565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61146c6112d3565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113f53390565b600054610100900460ff166114c85760405162461bcd60e51b815260040161039090611c1c565b610b7461164c565b600054610100900460ff166114f75760405162461bcd60e51b815260040161039090611c1c565b610b7461167c565b600054610100900460ff166115265760405162461bcd60e51b815260040161039090611c1c565b610b746116a3565b6000611583826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116d69092919063ffffffff16565b90508051600014806115a45750808060200190518101906115a49190611c67565b6113bb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610390565b60975460ff16610b745760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610390565b600054610100900460ff166116735760405162461bcd60e51b815260040161039090611c1c565b610b7433611412565b600054610100900460ff166113845760405162461bcd60e51b815260040161039090611c1c565b600054610100900460ff166116ca5760405162461bcd60e51b815260040161039090611c1c565b6097805460ff19169055565b60606116e584846000856116ed565b949350505050565b60608247101561174e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610390565b600080866001600160a01b0316858760405161176a9190611c89565b60006040518083038185875af1925050503d80600081146117a7576040519150601f19603f3d011682016040523d82523d6000602084013e6117ac565b606091505b50915091506117bd878383876117c8565b979650505050505050565b60608315611837578251600003611830576001600160a01b0385163b6118305760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610390565b50816116e5565b6116e5838381511561184c5781518083602001fd5b8060405162461bcd60e51b81526004016103909190611ca5565b60006020828403121561187857600080fd5b5035919050565b60008060006060848603121561189457600080fd5b505081359360208301359350604090920135919050565b60008083601f8401126118bd57600080fd5b50813567ffffffffffffffff8111156118d557600080fd5b6020830191508360208260051b85010111156118f057600080fd5b9250929050565b6000806000806040858703121561190d57600080fd5b843567ffffffffffffffff8082111561192557600080fd5b611931888389016118ab565b9096509450602087013591508082111561194a57600080fd5b50611957878288016118ab565b95989497509550505050565b6000806040838503121561197657600080fd5b50508035926020909101359150565b80356001600160a01b038116811461199c57600080fd5b919050565b600080600080600080600060e0888a0312156119bc57600080fd5b6119c588611985565b96506119d360208901611985565b95506119e160408901611985565b94506119ef60608901611985565b9699959850939660808101359560a0820135955060c0909101359350915050565b600060208284031215611a2257600080fd5b611a2b82611985565b9392505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b5e57610b5e611a32565b6020808252601190820152704d69736d61746368656420706172616d7360781b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201611aae57611aae611a32565b5060010190565b600060208284031215611ac757600080fd5b5051919050565b8082028115828204841417610b5e57610b5e611a32565b81835260006001600160fb1b03831115611afe57600080fd5b8260051b80836020870137939093016020019392505050565b60005b83811015611b32578181015183820152602001611b1a565b50506000910152565b60008151808452611b53816020860160208601611b17565b601f01601f19169290920160200192915050565b6001600160a01b0387168152608060208201819052600090611b8c9083018789611ae5565b8281036040840152611b9f818688611ae5565b90508281036060840152611bb38185611b3b565b9998505050505050505050565b604081526000611bd4604083018688611ae5565b82810360208401526117bd818587611ae5565b600082611c0457634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610b5e57610b5e611a32565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611c7957600080fd5b81518015158114611a2b57600080fd5b60008251611c9b818460208701611b17565b9190910192915050565b602081526000611a2b6020830184611b3b56fea26469706673582212207338ecc51fe17c553ef65447a3c25165f7db48ffc5a4181f62388cbdf71aad2864736f6c63430008130033';

type NiftyItemSaleConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: NiftyItemSaleConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class NiftyItemSale__factory extends ContractFactory {
  constructor(...args: NiftyItemSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NiftyItemSale & { deploymentTransaction(): ContractTransactionResponse }
    >;
  }
  override connect(runner: ContractRunner | null): NiftyItemSale__factory {
    return super.connect(runner) as NiftyItemSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NiftyItemSaleInterface {
    return new Interface(_abi) as NiftyItemSaleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NiftyItemSale {
    return new Contract(address, _abi, runner) as unknown as NiftyItemSale;
  }
}
