/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../../common';
import type {
  NiftyBurningComicsL2,
  NiftyBurningComicsL2Interface,
} from '../../../../src/contracts/deprecated/NiftyBurningComicsL2';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'AddressError',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'InputError',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
    ],
    name: 'ComicsBurned',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'startIdForIMX',
        type: 'uint256[]',
      },
    ],
    name: 'ItemMinted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'startIdForIMX',
        type: 'uint256',
      },
    ],
    name: 'KeyMinted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: '_values',
        type: 'uint256[]',
      },
    ],
    name: 'burnComics',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'comics',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_comics',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'itemIdByTokenId',
    outputs: [
      {
        internalType: 'uint256',
        name: 'itemId',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'itemIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50610f75806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638456cb59116100715780638456cb59146101195780638a0bdb30146101215780638da5cb5b1461014f578063c4d66de814610160578063e07bb1a714610173578063f2fde38b1461017c57600080fd5b806316e1172e146100ae5780633f4ba83a146100c35780635c975abb146100cb5780635ec10817146100e6578063715018a614610111575b600080fd5b6100c16100bc366004610c73565b61018f565b005b6100c16106f4565b60975460ff1660405190151581526020015b60405180910390f35b60c9546100f9906001600160a01b031681565b6040516001600160a01b0390911681526020016100dd565b6100c1610706565b6100c1610718565b61014161012f366004610ce8565b60cb6020526000908152604090205481565b6040519081526020016100dd565b6033546001600160a01b03166100f9565b6100c161016e366004610d01565b610728565b61014160ca5481565b6100c161018a366004610d01565b6108b9565b610197610932565b61019f61098b565b80600681146101f4578060405163725b314360e11b81526004016101eb918152604060208201819052600e908201526d092dcecc2d8d2c840d8cadccee8d60931b606082015260800190565b60405180910390fd5b60408051600680825260e082019092526000916020820160c080368337505060408051600680825260e0820190925292935060009291506020820160c080368337505060408051600680825260e0820190925292935060009291506020820160c08036833701905050905060001960005b858110156102e1578188888381811061028057610280610d31565b9050602002013510156102a95787878281811061029f5761029f610d31565b9050602002013591505b6102b4816001610d5d565b8582815181106102c6576102c6610d31565b60209081029190910101526102da81610d76565b9050610265565b5080156103465760005b85811015610344578188888381811061030657610306610d31565b905060200201356103179190610d8f565b84828151811061032957610329610d31565b602090810291909101015261033d81610d76565b90506102eb565b505b60c954604051631ac8311560e21b81526001600160a01b0390911690636b20c4549061037c90339088908c908c90600401610e0f565b600060405180830381600087803b15801561039657600080fd5b505af11580156103aa573d6000803e3d6000fd5b50505050336001600160a01b03167f61ae20b90b5539676f6e0d4a5afbf874157b645ef9f8163171f73c1adc74e5eb8589896040516103eb93929190610e51565b60405180910390a280156105b35760ca546040805160018152602081018490529081019190915233907fedde92965a9ea914763dd34dcaa11f4d152857359faa5b6ad3b467a5b8eb77fc9060600160405180910390a260005b8181101561048157600760cb60008360ca546104609190610d5d565b815260208101919091526040016000205561047a81610d76565b9050610444565b508060ca60008282546104949190610d5d565b90915550600090505b858110156105685760ca548382815181106104ba576104ba610d31565b60200260200101818152505060005b86811015610526576104dc826001610d5d565b60cb6000838786815181106104f3576104f3610d31565b60200260200101516105059190610d5d565b815260208101919091526040016000205561051f81610d76565b90506104c9565b5083818151811061053957610539610d31565b602002602001015160ca60008282546105529190610d5d565b90915550610561905081610d76565b905061049d565b50336001600160a01b03167fc4f6e31fb4572c31e8c990a640827b8dac510a27029578b98edc155d33cb9be78585856040516105a693929190610e81565b60405180910390a26106e1565b60005b858110156106985760ca548382815181106105d3576105d3610d31565b60200260200101818152505060005b8888838181106105f4576105f4610d31565b905060200201358110156106575761060d826001610d5d565b60cb60008387868151811061062457610624610d31565b60200260200101516106369190610d5d565b815260208101919091526040016000205561065081610d76565b90506105e2565b5087878281811061066a5761066a610d31565b9050602002013560ca60008282546106829190610d5d565b90915550610691905081610d76565b90506105b6565b50336001600160a01b03167fc4f6e31fb4572c31e8c990a640827b8dac510a27029578b98edc155d33cb9be7858989866040516106d89493929190610eba565b60405180910390a25b50505050506106f06001606555565b5050565b6106fc6109d8565b610704610a32565b565b61070e6109d8565b6107046000610a84565b6107206109d8565b610704610ad6565b600054610100900460ff16158080156107485750600054600160ff909116105b806107625750303b158015610762575060005460ff166001145b6107c55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101eb565b6000805460ff1916600117905580156107e8576000805461ff0019166101001790555b6001600160a01b0382166108385760405163fb741fb960e01b8152602060048201526016602482015275496e76616c696420636f6d696373206164647265737360501b60448201526064016101eb565b610840610b13565b610848610b42565b610850610b71565b60c980546001600160a01b0319166001600160a01b038416179055600160ca5580156106f0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6108c16109d8565b6001600160a01b0381166109265760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101eb565b61092f81610a84565b50565b6002606554036109845760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101eb565b6002606555565b60975460ff16156107045760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016101eb565b6001606555565b6033546001600160a01b031633146107045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101eb565b610a3a610ba0565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610ade61098b565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610a673390565b600054610100900460ff16610b3a5760405162461bcd60e51b81526004016101eb90610ef4565b610704610be9565b600054610100900460ff16610b695760405162461bcd60e51b81526004016101eb90610ef4565b610704610c19565b600054610100900460ff16610b985760405162461bcd60e51b81526004016101eb90610ef4565b610704610c40565b60975460ff166107045760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016101eb565b600054610100900460ff16610c105760405162461bcd60e51b81526004016101eb90610ef4565b61070433610a84565b600054610100900460ff166109d15760405162461bcd60e51b81526004016101eb90610ef4565b600054610100900460ff16610c675760405162461bcd60e51b81526004016101eb90610ef4565b6097805460ff19169055565b60008060208385031215610c8657600080fd5b823567ffffffffffffffff80821115610c9e57600080fd5b818501915085601f830112610cb257600080fd5b813581811115610cc157600080fd5b8660208260051b8501011115610cd657600080fd5b60209290920196919550909350505050565b600060208284031215610cfa57600080fd5b5035919050565b600060208284031215610d1357600080fd5b81356001600160a01b0381168114610d2a57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610d7057610d70610d47565b92915050565b600060018201610d8857610d88610d47565b5060010190565b81810381811115610d7057610d70610d47565b600081518084526020808501945080840160005b83811015610dd257815187529582019590820190600101610db6565b509495945050505050565b81835260006001600160fb1b03831115610df657600080fd5b8260051b80836020870137939093016020019392505050565b6001600160a01b0385168152606060208201819052600090610e3390830186610da2565b8281036040840152610e46818587610ddd565b979650505050505050565b604081526000610e646040830186610da2565b8281036020840152610e77818587610ddd565b9695505050505050565b606081526000610e946060830186610da2565b8281036020840152610ea68186610da2565b90508281036040840152610e778185610da2565b606081526000610ecd6060830187610da2565b8281036020840152610ee0818688610ddd565b90508281036040840152610e468185610da2565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220c2c8744e1be382b9dc1e3379178dc29bbbd2dddf102566a5591f4fccfaf47c6164736f6c63430008130033';

type NiftyBurningComicsL2ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: NiftyBurningComicsL2ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class NiftyBurningComicsL2__factory extends ContractFactory {
  constructor(...args: NiftyBurningComicsL2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NiftyBurningComicsL2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NiftyBurningComicsL2__factory {
    return super.connect(runner) as NiftyBurningComicsL2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NiftyBurningComicsL2Interface {
    return new Interface(_abi) as NiftyBurningComicsL2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): NiftyBurningComicsL2 {
    return new Contract(address, _abi, runner) as unknown as NiftyBurningComicsL2;
  }
}
