/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../../common';
import type { NiftyItemL2, NiftyItemL2Interface } from '../../../../src/contracts/deprecated/NiftyItemL2';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'AccessError',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'AddressError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'MintError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SeparatorMustExist',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'blueprint',
        type: 'bytes',
      },
    ],
    name: 'AssetMinted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_tokenId',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'imx',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_imx',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'itemIdByTokenId',
    outputs: [
      {
        internalType: 'uint256',
        name: 'itemId',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_quantity',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_mintingBlob',
        type: 'bytes',
      },
    ],
    name: 'mintFor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_uri',
        type: 'string',
      },
    ],
    name: 'setURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'uri',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b506127e2806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80635c975abb1161010457806395d89b41116100a2578063c87b56dd11610071578063c87b56dd146103b8578063e985e9c5146103cb578063eac989f814610407578063f2fde38b1461040f57600080fd5b806395d89b4114610377578063a22cb4651461037f578063b88d4fde14610392578063c4d66de8146103a557600080fd5b8063715018a6116100de578063715018a6146103355780638456cb591461033d5780638a0bdb30146103455780638da5cb5b1461036657600080fd5b80635c975abb146103045780636352211e1461030f57806370a082311461032257600080fd5b806319ee6e3f116101715780633f4ba83a1161014b5780633f4ba83a146102c357806342842e0e146102cb57806342966c68146102de5780634f6ccce7146102f157600080fd5b806319ee6e3f1461028a57806323b872dd1461029d5780632f745c59146102b057600080fd5b8063081812fc116101ad578063081812fc14610226578063095ea7b3146102515780630f08025f1461026457806318160ddd1461027857600080fd5b806301ffc9a7146101d457806302fe5305146101fc57806306fdde0314610211575b600080fd5b6101e76101e2366004611f6f565b610422565b60405190151581526020015b60405180910390f35b61020f61020a366004611fce565b61044d565b005b610219610468565b6040516101f39190612060565b610239610234366004612073565b6104fa565b6040516001600160a01b0390911681526020016101f3565b61020f61025f3660046120a8565b610521565b61012e54610239906001600160a01b031681565b6099545b6040519081526020016101f3565b61020f6102983660046120d2565b610636565b61020f6102ab36600461212c565b610756565b61027c6102be3660046120a8565b610787565b61020f61081d565b61020f6102d936600461212c565b61082f565b61020f6102ec366004612073565b61084a565b61027c6102ff366004612073565b61085e565b60fb5460ff166101e7565b61023961031d366004612073565b6108f1565b61027c610330366004612168565b610951565b61020f6109d7565b61020f6109e9565b61027c610353366004612073565b61012f6020526000908152604090205481565b60c9546001600160a01b0316610239565b6102196109f9565b61020f61038d366004612183565b610a08565b61020f6103a03660046121d5565b610a17565b61020f6103b3366004612168565b610a4f565b6102196103c6366004612073565b610c21565b6101e76103d93660046122b1565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b610219610c88565b61020f61041d366004612168565b610d17565b60006001600160e01b0319821663780e9d6360e01b1480610447575061044782610d8d565b92915050565b610455610ddd565b61012d61046382848361236c565b505050565b606060658054610477906122e4565b80601f01602080910402602001604051908101604052809291908181526020018280546104a3906122e4565b80156104f05780601f106104c5576101008083540402835291602001916104f0565b820191906000526020600020905b8154815290600101906020018083116104d357829003601f168201915b5050505050905090565b600061050582610e37565b506000908152606960205260409020546001600160a01b031690565b600061052c826108f1565b9050806001600160a01b0316836001600160a01b03160361059e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105ba57506105ba81336103d9565b61062c5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610595565b6104638383610e96565b61012e546001600160a01b0316331480159061065d575060c9546001600160a01b03163314155b156106ab5760405163048e2d4960e41b815260206004820152601e60248201527f4d7573742062652063616c6c6564206279206f776e6572206f7220494d5800006044820152606401610595565b6106b3610f04565b826001146106f757604051636827d5d160e01b815260206004820152601060248201526f416d6f756e74206d757374206265203160801b6044820152606401610595565b6000806107048484610f4a565b915091506107138683836110e2565b7f31e594f6b36b98ec520a91cbbba7b8724b1cec27393f86d8f0f6aa6084db0aaf8683836040516107469392919061242c565b60405180910390a1505050505050565b610760338261110b565b61077c5760405162461bcd60e51b81526004016105959061245c565b61046383838361118a565b600061079283610951565b82106107f45760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610595565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b610825610ddd565b61082d6112fb565b565b61046383838360405180602001604052806000815250610a17565b610852610f04565b61085b8161134d565b50565b600061086960995490565b82106108cc5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610595565b609982815481106108df576108df6124a9565b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b0316806104475760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610595565b60006001600160a01b0382166109bb5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610595565b506001600160a01b031660009081526068602052604090205490565b6109df610ddd565b61082d60006113f0565b6109f1610ddd565b61082d611442565b606060668054610477906122e4565b610a1333838361147f565b5050565b610a21338361110b565b610a3d5760405162461bcd60e51b81526004016105959061245c565b610a498484848461154d565b50505050565b600054610100900460ff1615808015610a6f5750600054600160ff909116105b80610a895750303b158015610a89575060005460ff166001145b610aec5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610595565b6000805460ff191660011790558015610b0f576000805461ff0019166101001790555b6001600160a01b038216610b5c5760405163fb741fb960e01b8152602060048201526013602482015272496e76616c696420494d58206164647265737360681b6044820152606401610595565b610bac6040518060400160405280600b81526020016a2734b33a3ca4ba32b6a61960a91b8152506040518060400160405280600b81526020016a2734b33a3ca4ba32b6a61960a91b815250611580565b610bb46115b1565b610bbc6115e0565b61012e80546001600160a01b0319166001600160a01b0384161790558015610a13576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6060610c2c82610e37565b6000610c3661160f565b90506000815111610c565760405180602001604052806000815250610c81565b80610c608461161f565b604051602001610c719291906124bf565b6040516020818303038152906040525b9392505050565b61012d8054610c96906122e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc2906122e4565b8015610d0f5780601f10610ce457610100808354040283529160200191610d0f565b820191906000526020600020905b815481529060010190602001808311610cf257829003601f168201915b505050505081565b610d1f610ddd565b6001600160a01b038116610d845760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610595565b61085b816113f0565b60006001600160e01b031982166380ac58cd60e01b1480610dbe57506001600160e01b03198216635b5e139f60e01b145b8061044757506301ffc9a760e01b6001600160e01b0319831614610447565b60c9546001600160a01b0316331461082d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610595565b6000818152606760205260409020546001600160a01b031661085b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610595565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ecb826108f1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60fb5460ff161561082d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610595565b600060606000610fa885858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506040805180820190915260018152601d60f91b6020820152935091506116b29050565b90506000811215610fcc57604051633588b71160e11b815260040160405180910390fd5b600061102686600187610fdf8287612504565b92610fec93929190612517565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061174a92505050565b9050600060036110368488612504565b6110409190612504565b905080600003611067578160405180602001604052806000815250945094505050506110db565b3660008888611077876002612541565b9061108360018c612504565b9261109093929190612517565b9150915083828281818080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250959c50919a50505050505050505050505b9250929050565b60006110ed8261174a565b600084815261012f602052604090208190559050610a4984846117ea565b600080611117836108f1565b9050806001600160a01b0316846001600160a01b0316148061115e57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b806111825750836001600160a01b0316611177846104fa565b6001600160a01b0316145b949350505050565b826001600160a01b031661119d826108f1565b6001600160a01b0316146111c35760405162461bcd60e51b815260040161059590612554565b6001600160a01b0382166112255760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610595565b6112328383836001611804565b826001600160a01b0316611245826108f1565b6001600160a01b03161461126b5760405162461bcd60e51b815260040161059590612554565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b611303611938565b60fb805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000611358826108f1565b9050611368816000846001611804565b611371826108f1565b600083815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526068845282852080546000190190558785526067909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61144a610f04565b60fb805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113303390565b816001600160a01b0316836001600160a01b0316036114e05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610595565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61155884848461118a565b61156484848484611981565b610a495760405162461bcd60e51b815260040161059590612599565b600054610100900460ff166115a75760405162461bcd60e51b8152600401610595906125eb565b610a138282611a82565b600054610100900460ff166115d85760405162461bcd60e51b8152600401610595906125eb565b61082d611ac2565b600054610100900460ff166116075760405162461bcd60e51b8152600401610595906125eb565b61082d611af2565b606061012d8054610477906122e4565b6060600061162c83611b25565b600101905060008167ffffffffffffffff81111561164c5761164c6121bf565b6040519080825280601f01601f191660200182016040528015611676576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461168057509392505050565b815160009083906001146116c8576116c8612636565b8451835b8181101561173c57826000815181106116e7576116e76124a9565b602001015160f81c60f81b6001600160f81b03191687828151811061170e5761170e6124a9565b01602001516001600160f81b0319160361172c579250610c81915050565b6117358161264c565b90506116cc565b506000199695505050505050565b80516000908190815b818110156117e157600085828151811061176f5761176f6124a9565b016020015160f81c90506030811080159061178b575060398111155b156117b75761179b603082612504565b6117a685600a612665565b6117b09190612541565b93506117d0565b60405163b4fa3fb360e01b815260040160405180910390fd5b506117da8161264c565b9050611753565b50909392505050565b610a13828260405180602001604052806000815250611bfd565b60018111156118735760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610595565b816001600160a01b0385166118cf576118ca81609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b6118f2565b836001600160a01b0316856001600160a01b0316146118f2576118f28582611c30565b6001600160a01b03841661190e5761190981611ccd565b611931565b846001600160a01b0316846001600160a01b031614611931576119318482611d7c565b5050505050565b60fb5460ff1661082d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610595565b60006001600160a01b0384163b15611a7757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119c590339089908890889060040161267c565b6020604051808303816000875af1925050508015611a00575060408051601f3d908101601f191682019092526119fd918101906126b9565b60015b611a5d573d808015611a2e576040519150601f19603f3d011682016040523d82523d6000602084013e611a33565b606091505b508051600003611a555760405162461bcd60e51b815260040161059590612599565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611182565b506001949350505050565b600054610100900460ff16611aa95760405162461bcd60e51b8152600401610595906125eb565b6065611ab583826126d6565b50606661046382826126d6565b600054610100900460ff16611ae95760405162461bcd60e51b8152600401610595906125eb565b61082d336113f0565b600054610100900460ff16611b195760405162461bcd60e51b8152600401610595906125eb565b60fb805460ff19169055565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611b645772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611b90576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611bae57662386f26fc10000830492506010015b6305f5e1008310611bc6576305f5e100830492506008015b6127108310611bda57612710830492506004015b60648310611bec576064830492506002015b600a83106104475760010192915050565b611c078383611dc0565b611c146000848484611981565b6104635760405162461bcd60e51b815260040161059590612599565b60006001611c3d84610951565b611c479190612504565b600083815260986020526040902054909150808214611c9a576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b609954600090611cdf90600190612504565b6000838152609a602052604081205460998054939450909284908110611d0757611d076124a9565b906000526020600020015490508060998381548110611d2857611d286124a9565b6000918252602080832090910192909255828152609a90915260408082208490558582528120556099805480611d6057611d60612796565b6001900381819060005260206000200160009055905550505050565b6000611d8783610951565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b6001600160a01b038216611e165760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610595565b6000818152606760205260409020546001600160a01b031615611e7b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610595565b611e89600083836001611804565b6000818152606760205260409020546001600160a01b031615611eee5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610595565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461085b57600080fd5b600060208284031215611f8157600080fd5b8135610c8181611f59565b60008083601f840112611f9e57600080fd5b50813567ffffffffffffffff811115611fb657600080fd5b6020830191508360208285010111156110db57600080fd5b60008060208385031215611fe157600080fd5b823567ffffffffffffffff811115611ff857600080fd5b61200485828601611f8c565b90969095509350505050565b60005b8381101561202b578181015183820152602001612013565b50506000910152565b6000815180845261204c816020860160208601612010565b601f01601f19169290920160200192915050565b602081526000610c816020830184612034565b60006020828403121561208557600080fd5b5035919050565b80356001600160a01b03811681146120a357600080fd5b919050565b600080604083850312156120bb57600080fd5b6120c48361208c565b946020939093013593505050565b600080600080606085870312156120e857600080fd5b6120f18561208c565b935060208501359250604085013567ffffffffffffffff81111561211457600080fd5b61212087828801611f8c565b95989497509550505050565b60008060006060848603121561214157600080fd5b61214a8461208c565b92506121586020850161208c565b9150604084013590509250925092565b60006020828403121561217a57600080fd5b610c818261208c565b6000806040838503121561219657600080fd5b61219f8361208c565b9150602083013580151581146121b457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156121eb57600080fd5b6121f48561208c565b93506122026020860161208c565b925060408501359150606085013567ffffffffffffffff8082111561222657600080fd5b818701915087601f83011261223a57600080fd5b81358181111561224c5761224c6121bf565b604051601f8201601f19908116603f01168101908382118183101715612274576122746121bf565b816040528281528a602084870101111561228d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156122c457600080fd5b6122cd8361208c565b91506122db6020840161208c565b90509250929050565b600181811c908216806122f857607f821691505b60208210810361231857634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561046357600081815260208120601f850160051c810160208610156123455750805b601f850160051c820191505b8181101561236457828155600101612351565b505050505050565b67ffffffffffffffff831115612384576123846121bf565b6123988361239283546122e4565b8361231e565b6000601f8411600181146123cc57600085156123b45750838201355b600019600387901b1c1916600186901b178355611931565b600083815260209020601f19861690835b828110156123fd57868501358255602094850194600190920191016123dd565b508682101561241a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60018060a01b03841681528260208201526060604082015260006124536060830184612034565b95945050505050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600083516124d1818460208801612010565b8351908301906124e5818360208801612010565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610447576104476124ee565b6000808585111561252757600080fd5b8386111561253457600080fd5b5050820193919092039150565b80820180821115610447576104476124ee565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052600160045260246000fd5b60006001820161265e5761265e6124ee565b5060010190565b8082028115828204841417610447576104476124ee565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906126af90830184612034565b9695505050505050565b6000602082840312156126cb57600080fd5b8151610c8181611f59565b815167ffffffffffffffff8111156126f0576126f06121bf565b612704816126fe84546122e4565b8461231e565b602080601f83116001811461273957600084156127215750858301515b600019600386901b1c1916600185901b178555612364565b600085815260208120601f198616915b8281101561276857888601518255948401946001909101908401612749565b50858210156127865787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220f57a01a0f2328e21a014e87406fdfee5780c9f887729940c44777d44e9e5836564736f6c63430008130033';

type NiftyItemL2ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: NiftyItemL2ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class NiftyItemL2__factory extends ContractFactory {
  constructor(...args: NiftyItemL2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NiftyItemL2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NiftyItemL2__factory {
    return super.connect(runner) as NiftyItemL2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NiftyItemL2Interface {
    return new Interface(_abi) as NiftyItemL2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): NiftyItemL2 {
    return new Contract(address, _abi, runner) as unknown as NiftyItemL2;
  }
}
