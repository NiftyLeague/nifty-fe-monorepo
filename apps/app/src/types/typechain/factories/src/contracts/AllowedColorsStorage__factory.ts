/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers6';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers6';
import type { NonPayableOverrides } from '../../../common';
import type { AllowedColorsStorage, AllowedColorsStorageInterface } from '../../../src/contracts/AllowedColorsStorage';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tribe',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'color',
        type: 'uint256',
      },
    ],
    name: 'isAllowedColor',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tribe',
        type: 'uint256',
      },
      {
        internalType: 'uint256[]',
        name: 'colors',
        type: 'uint256[]',
      },
      {
        internalType: 'bool',
        name: 'allowed',
        type: 'bool',
      },
    ],
    name: 'setAllowedColorsOnTribe',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104b88061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780637d6f971f146100665780638da5cb5b14610079578063968ef8f514610099578063f2fde38b146100d7575b600080fd5b6100646100ea565b005b610064610074366004610317565b6100fe565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100c76100a73660046103f1565b600091825260016020908152604080842092845291905290205460ff1690565b6040519015158152602001610090565b6100646100e5366004610413565b6101c9565b6100f2610242565b6100fc600061029c565b565b610106610242565b6000831180156101165750600a83105b6101605760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081d1c9a5899481c1c9bdd9a59195960521b60448201526064015b60405180910390fd5b60005b82518110156101c3576101b18484838151811061018257610182610443565b602090810291909101810151600092835260018252604080842091845291529020805460ff1916841515179055565b806101bb81610459565b915050610163565b50505050565b6101d1610242565b6001600160a01b0381166102365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610157565b61023f8161029c565b50565b6000546001600160a01b031633146100fc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610157565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b8035801515811461031257600080fd5b919050565b60008060006060848603121561032c57600080fd5b8335925060208085013567ffffffffffffffff8082111561034c57600080fd5b818701915087601f83011261036057600080fd5b813581811115610372576103726102ec565b8060051b604051601f19603f83011681018181108582111715610397576103976102ec565b60405291825284820192508381018501918a8311156103b557600080fd5b938501935b828510156103d3578435845293850193928501926103ba565b8097505050505050506103e860408501610302565b90509250925092565b6000806040838503121561040457600080fd5b50508035926020909101359150565b60006020828403121561042557600080fd5b81356001600160a01b038116811461043c57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561047b57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220387783aaf31524d99aed424c63dcd867480898f9a91b6f2538c26c6b213ba01364736f6c634300080b0033';

type AllowedColorsStorageConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: AllowedColorsStorageConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class AllowedColorsStorage__factory extends ContractFactory {
  constructor(...args: AllowedColorsStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AllowedColorsStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AllowedColorsStorage__factory {
    return super.connect(runner) as AllowedColorsStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllowedColorsStorageInterface {
    return new Interface(_abi) as AllowedColorsStorageInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AllowedColorsStorage {
    return new Contract(address, _abi, runner) as unknown as AllowedColorsStorage;
  }
}
