/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers6';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers6';
import type { NonPayableOverrides } from '../../../../common';
import type {
  NiftyBurningComicsL2,
  NiftyBurningComicsL2Interface,
} from '../../../../src/contracts/imx/NiftyBurningComicsL2';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
    ],
    name: 'ComicsBurned',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'startIdForIMX',
        type: 'uint256[]',
      },
    ],
    name: 'ItemMinted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'startIdForIMX',
        type: 'uint256',
      },
    ],
    name: 'KeyMinted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: '_values',
        type: 'uint256[]',
      },
    ],
    name: 'burnComics',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'comics',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_comics',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'itemIdByTokenId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'itemIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50610f2d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638456cb59116100715780638456cb59146101195780638a0bdb30146101215780638da5cb5b1461014f578063c4d66de814610160578063e07bb1a714610173578063f2fde38b1461017c57600080fd5b806316e1172e146100ae5780633f4ba83a146100c35780635c975abb146100cb5780635ec10817146100e6578063715018a614610111575b600080fd5b6100c16100bc366004610c22565b61018f565b005b6100c16106f2565b60975460ff1660405190151581526020015b60405180910390f35b60c9546100f9906001600160a01b031681565b6040516001600160a01b0390911681526020016100dd565b6100c1610704565b6100c1610716565b61014161012f366004610c97565b60cb6020526000908152604090205481565b6040519081526020016100dd565b6033546001600160a01b03166100f9565b6100c161016e366004610cb0565b610726565b61014160ca5481565b6100c161018a366004610cb0565b610867565b6101976108e0565b61019f61093a565b600681146101e55760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b60448201526064015b60405180910390fd5b60408051600680825260e082019092526000916020820160c080368337505060408051600680825260e0820190925292935060009291506020820160c080368337505060408051600680825260e0820190925292935060009291506020820160c08036833701905050905060001960005b858110156102d4578187878381811061027157610271610ce0565b90506020020135101561029a5786868281811061029057610290610ce0565b9050602002013591505b6102a5816001610d0c565b8582815181106102b7576102b7610ce0565b6020908102919091010152806102cc81610d24565b915050610256565b50801561033b5760005b8581101561033957818787838181106102f9576102f9610ce0565b9050602002013561030a9190610d3f565b84828151811061031c5761031c610ce0565b60209081029190910101528061033181610d24565b9150506102de565b505b60c954604051631ac8311560e21b81526001600160a01b0390911690636b20c4549061037190339088908b908b90600401610dc7565b600060405180830381600087803b15801561038b57600080fd5b505af115801561039f573d6000803e3d6000fd5b50505050336001600160a01b03167f61ae20b90b5539676f6e0d4a5afbf874157b645ef9f8163171f73c1adc74e5eb8588886040516103e093929190610e09565b60405180910390a280156105ae5760ca546040805160018152602081018490529081019190915233907fedde92965a9ea914763dd34dcaa11f4d152857359faa5b6ad3b467a5b8eb77fc9060600160405180910390a260005b8181101561047857600760cb60008360ca546104559190610d0c565b81526020810191909152604001600020558061047081610d24565b915050610439565b508060ca600082825461048b9190610d0c565b90915550600090505b858110156105635760ca548382815181106104b1576104b1610ce0565b60200260200101818152505060005b8681101561051f576104d3826001610d0c565b60cb6000838786815181106104ea576104ea610ce0565b60200260200101516104fc9190610d0c565b81526020810191909152604001600020558061051781610d24565b9150506104c0565b5083818151811061053257610532610ce0565b602002602001015160ca600082825461054b9190610d0c565b9091555081905061055b81610d24565b915050610494565b50336001600160a01b03167fc4f6e31fb4572c31e8c990a640827b8dac510a27029578b98edc155d33cb9be78585856040516105a193929190610e39565b60405180910390a26106e0565b60005b858110156106975760ca548382815181106105ce576105ce610ce0565b60200260200101818152505060005b8787838181106105ef576105ef610ce0565b9050602002013581101561065457610608826001610d0c565b60cb60008387868151811061061f5761061f610ce0565b60200260200101516106319190610d0c565b81526020810191909152604001600020558061064c81610d24565b9150506105dd565b5086868281811061066757610667610ce0565b9050602002013560ca600082825461067f9190610d0c565b9091555081905061068f81610d24565b9150506105b1565b50336001600160a01b03167fc4f6e31fb4572c31e8c990a640827b8dac510a27029578b98edc155d33cb9be7858888866040516106d79493929190610e72565b60405180910390a25b505050506106ee6001606555565b5050565b6106fa610987565b6107026109e1565b565b61070c610987565b6107026000610a33565b61071e610987565b610702610a85565b600054610100900460ff16158080156107465750600054600160ff909116105b806107605750303b158015610760575060005460ff166001145b6107c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101dc565b6000805460ff1916600117905580156107e6576000805461ff0019166101001790555b6107ee610ac2565b6107f6610af1565b6107fe610b20565b60c980546001600160a01b0319166001600160a01b038416179055600160ca5580156106ee576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b61086f610987565b6001600160a01b0381166108d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101dc565b6108dd81610a33565b50565b600260655414156109335760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101dc565b6002606555565b60975460ff16156107025760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016101dc565b6001606555565b6033546001600160a01b031633146107025760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101dc565b6109e9610b4f565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a8d61093a565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610a163390565b600054610100900460ff16610ae95760405162461bcd60e51b81526004016101dc90610eac565b610702610b98565b600054610100900460ff16610b185760405162461bcd60e51b81526004016101dc90610eac565b610702610bc8565b600054610100900460ff16610b475760405162461bcd60e51b81526004016101dc90610eac565b610702610bef565b60975460ff166107025760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016101dc565b600054610100900460ff16610bbf5760405162461bcd60e51b81526004016101dc90610eac565b61070233610a33565b600054610100900460ff166109805760405162461bcd60e51b81526004016101dc90610eac565b600054610100900460ff16610c165760405162461bcd60e51b81526004016101dc90610eac565b6097805460ff19169055565b60008060208385031215610c3557600080fd5b823567ffffffffffffffff80821115610c4d57600080fd5b818501915085601f830112610c6157600080fd5b813581811115610c7057600080fd5b8660208260051b8501011115610c8557600080fd5b60209290920196919550909350505050565b600060208284031215610ca957600080fd5b5035919050565b600060208284031215610cc257600080fd5b81356001600160a01b0381168114610cd957600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610d1f57610d1f610cf6565b500190565b6000600019821415610d3857610d38610cf6565b5060010190565b600082821015610d5157610d51610cf6565b500390565b600081518084526020808501945080840160005b83811015610d8657815187529582019590820190600101610d6a565b509495945050505050565b81835260006001600160fb1b03831115610daa57600080fd5b8260051b8083602087013760009401602001938452509192915050565b6001600160a01b0385168152606060208201819052600090610deb90830186610d56565b8281036040840152610dfe818587610d91565b979650505050505050565b604081526000610e1c6040830186610d56565b8281036020840152610e2f818587610d91565b9695505050505050565b606081526000610e4c6060830186610d56565b8281036020840152610e5e8186610d56565b90508281036040840152610e2f8185610d56565b606081526000610e856060830187610d56565b8281036020840152610e98818688610d91565b90508281036040840152610dfe8185610d56565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212205c6b42176df712c735a462928da8301b501da4b7d6b6dfe6d4a246acf141098e64736f6c634300080b0033';

type NiftyBurningComicsL2ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: NiftyBurningComicsL2ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class NiftyBurningComicsL2__factory extends ContractFactory {
  constructor(...args: NiftyBurningComicsL2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NiftyBurningComicsL2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NiftyBurningComicsL2__factory {
    return super.connect(runner) as NiftyBurningComicsL2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NiftyBurningComicsL2Interface {
    return new Interface(_abi) as NiftyBurningComicsL2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): NiftyBurningComicsL2 {
    return new Contract(address, _abi, runner) as unknown as NiftyBurningComicsL2;
  }
}
