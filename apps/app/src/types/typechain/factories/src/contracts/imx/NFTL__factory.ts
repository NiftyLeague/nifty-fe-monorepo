/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../../common';
import type { NFTL, NFTLInterface } from '../../../../src/contracts/imx/NFTL';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'bridge_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'rootToken_',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'name_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol_',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'InvalidInitialization',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidShortString',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'str',
        type: 'string',
      },
    ],
    name: 'StringTooLong',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'Unauthorized',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'delegator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'fromDelegate',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'toDelegate',
        type: 'address',
      },
    ],
    name: 'DelegateChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousBalance',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newBalance',
        type: 'uint256',
      },
    ],
    name: 'DelegateVotesChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'EIP712DomainChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'userAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'relayerAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'functionSignature',
        type: 'bytes',
      },
    ],
    name: 'MetaTransactionExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'CLOCK_MODE',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridge',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'pos',
        type: 'uint32',
      },
    ],
    name: 'checkpoints',
    outputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'fromBlock',
            type: 'uint32',
          },
          {
            internalType: 'uint224',
            name: 'votes',
            type: 'uint224',
          },
        ],
        internalType: 'struct ERC20Votes.Checkpoint',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clock',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
    ],
    name: 'delegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'expiry',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'delegateBySig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'delegates',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'eip712Domain',
    outputs: [
      {
        internalType: 'bytes1',
        name: 'fields',
        type: 'bytes1',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'version',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'verifyingContract',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'salt',
        type: 'bytes32',
      },
      {
        internalType: 'uint256[]',
        name: 'extensions',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'userAddress',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'functionSignature',
        type: 'bytes',
      },
      {
        internalType: 'bytes32',
        name: 'sigR',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'sigS',
        type: 'bytes32',
      },
      {
        internalType: 'uint8',
        name: 'sigV',
        type: 'uint8',
      },
    ],
    name: 'executeMetaTransaction',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'getNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'timepoint',
        type: 'uint256',
      },
    ],
    name: 'getPastTotalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'timepoint',
        type: 'uint256',
      },
    ],
    name: 'getPastVotes',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'getVotes',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'offset',
        type: 'uint256',
      },
    ],
    name: 'invalidateNext',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'nonces',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'numCheckpoints',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'permit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rootToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6101a06040523480156200001257600080fd5b506040516200318b3803806200318b83398101604081905262000035916200040b565b6040805180820190915260018152603160f81b602082015282908190818460036200006183826200052a565b5060046200007082826200052a565b506200008291508390506005620002a5565b6101205262000093816006620002a5565b61014052815160208084019190912060e052815190820120610100524660a0526200012160e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506001600160a01b0384166200018857604051634729eac360e11b815260206004820152601e60248201527f4272696467652061646472657373206d75737420626520646566696e6564000060448201526064015b60405180910390fd5b6001600160a01b038316620001e157604051634729eac360e11b815260206004820152601d60248201527f546f6b656e2061646472657373206d75737420626520646566696e656400000060448201526064016200017f565b81516000036200023557604051634729eac360e11b815260206004820152601460248201527f4e616d652063616e6e6f7420626520656d70747900000000000000000000000060448201526064016200017f565b80516000036200028957604051634729eac360e11b815260206004820152601660248201527f53796d626f6c2063616e6e6f7420626520656d7074790000000000000000000060448201526064016200017f565b50506001600160a01b0391821661016052166101805262000650565b6000602083511015620002c557620002bd83620002de565b9050620002d8565b81620002d284826200052a565b5060ff90505b92915050565b600080829050601f815111156200030c578260405163305a27a960e01b81526004016200017f9190620005f6565b805162000319826200062b565b179392505050565b80516001600160a01b03811681146200033957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200037157818101518382015260200162000357565b50506000910152565b600082601f8301126200038c57600080fd5b81516001600160401b0380821115620003a957620003a96200033e565b604051601f8301601f19908116603f01168101908282118183101715620003d457620003d46200033e565b81604052838152866020858801011115620003ee57600080fd5b6200040184602083016020890162000354565b9695505050505050565b600080600080608085870312156200042257600080fd5b6200042d8562000321565b93506200043d6020860162000321565b60408601519093506001600160401b03808211156200045b57600080fd5b62000469888389016200037a565b935060608701519150808211156200048057600080fd5b506200048f878288016200037a565b91505092959194509250565b600181811c90821680620004b057607f821691505b602082108103620004d157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200052557600081815260208120601f850160051c81016020861015620005005750805b601f850160051c820191505b8181101562000521578281556001016200050c565b5050505b505050565b81516001600160401b038111156200054657620005466200033e565b6200055e816200055784546200049b565b84620004d7565b602080601f8311600181146200059657600084156200057d5750858301515b600019600386901b1c1916600185901b17855562000521565b600085815260208120601f198616915b82811015620005c757888601518255948401946001909101908401620005a6565b5085821015620005e65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200061781604085016020870162000354565b601f01601f19169190910160400192915050565b80516020808301519190811015620004d15760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516101605161018051612abc620006cf600039600061025d0152600081816104bd015281816109a90152610cdd01526000610b5f01526000610b340152600061166f01526000611647015260006115a2015260006115cc015260006115f60152612abc6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806370a082311161010f5780639dc29fac116100a2578063d505accf11610071578063d505accf14610495578063dd62ed3e146104a8578063e78cea92146104bb578063f1127ed8146104e157600080fd5b80639dc29fac14610449578063a457c2d71461045c578063a9059cbb1461046f578063c3cda5201461048257600080fd5b806391ddadf4116100de57806391ddadf4146103fc57806395d89b411461041b5780639ab24eb0146104235780639b77ef111461043657600080fd5b806370a08231146103925780637ecebe00146103bb57806384b0196e146103ce5780638e539e8c146103e957600080fd5b80633644e515116101875780634bf5d7e9116101565780634bf5d7e914610321578063587cde1e146103295780635c19a95c146103555780636fcfff451461036a57600080fd5b80633644e515146102e057806339509351146102e85780633a46b1a8146102fb57806340c10f191461030e57600080fd5b80631f2d0065116101c35780631f2d00651461025b57806323b872dd146102955780632d0335ab146102a8578063313ce567146102d157600080fd5b806306fdde03146101f5578063095ea7b3146102135780630c53c51c1461023657806318160ddd14610249575b600080fd5b6101fd61051e565b60405161020a9190612596565b60405180910390f35b6102266102213660046125c5565b6105b0565b604051901515815260200161020a565b6101fd610244366004612600565b6105d4565b6002545b60405190815260200161020a565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161020a565b6102266102a33660046126a6565b6108b7565b61024d6102b63660046126e2565b6001600160a01b03166000908152600c602052604090205490565b6040516012815260200161020a565b61024d6108e5565b6102266102f63660046125c5565b6108f4565b61024d6103093660046125c5565b610920565b61022661031c3660046125c5565b6109a5565b6101fd610a3a565b61027d6103373660046126e2565b6001600160a01b039081166000908152600960205260409020541690565b6103686103633660046126e2565b610ad2565b005b61037d6103783660046126e2565b610ae6565b60405163ffffffff909116815260200161020a565b61024d6103a03660046126e2565b6001600160a01b031660009081526020819052604090205490565b61024d6103c93660046126e2565b610b08565b6103d6610b26565b60405161020a97969594939291906126fd565b61024d6103f7366004612793565b610baf565b610404610c16565b60405165ffffffffffff909116815260200161020a565b6101fd610c21565b61024d6104313660046126e2565b610c30565b610368610444366004612793565b610cb2565b6102266104573660046125c5565b610cd9565b61022661046a3660046125c5565b610d65565b61022661047d3660046125c5565b610deb565b6103686104903660046127ac565b610e03565b6103686104a3366004612804565b610f39565b61024d6104b636600461286e565b61109d565b7f000000000000000000000000000000000000000000000000000000000000000061027d565b6104f46104ef3660046128a1565b6110c8565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161020a565b60606003805461052d906128e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610559906128e1565b80156105a65780601f1061057b576101008083540402835291602001916105a6565b820191906000526020600020905b81548152906001019060200180831161058957829003601f168201915b5050505050905090565b6000806105bb61114c565b90506105c8818585611156565b60019150505b92915050565b6060600061061787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061127a92505050565b90506001600160e01b03196000358116908216036106a25760405162461bcd60e51b815260206004820152603d60248201527f66756e6374696f6e5369676e61747572652063616e206e6f74206265206f662060448201527f657865637574654d6574615472616e73616374696f6e206d6574686f6400000060648201526084015b60405180910390fd5b604080516060810182526001600160a01b038a166000818152600c6020908152848220548452808401929092528351601f8b0183900483028101830185528a815290938301918b908b9081908401838280828437600092019190915250505091525090506107138982888888611295565b6107695760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b6064820152608401610699565b600c60008a6001600160a01b03166001600160a01b031681526020019081526020016000206000815460010191905081905550600080306001600160a01b03168a8a8d6040516020016107be93929190612915565b60408051601f19818403018152908290526107d89161293b565b6000604051808303816000865af19150503d8060008114610815576040519150601f19603f3d011682016040523d82523d6000602084013e61081a565b606091505b50915091508161086c5760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c000000006044820152606401610699565b7f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b8b338c8c6040516108a19493929190612957565b60405180910390a19a9950505050505050505050565b6000806108c261114c565b90506108cf858285611371565b6108da8585856113eb565b506001949350505050565b60006108ef611595565b905090565b6000806108ff61114c565b90506105c8818585610911858961109d565b61091b91906129b9565b611156565b600061092a610c16565b65ffffffffffff16821061097c5760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b6044820152606401610699565b6001600160a01b0383166000908152600a6020526040902061099e90836116c3565b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109d961114c565b6001600160a01b031614610a275760405163973d02cb60e01b815260206004820152601460248201527313db9b1e48189c9a5919d94818d85b8818d85b1b60621b6044820152606401610699565b610a3183836117ac565b50600192915050565b606043610a45610c16565b65ffffffffffff1614610a9a5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f64650000006044820152606401610699565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b610ae3610add61114c565b826117ba565b50565b6001600160a01b0381166000908152600a60205260408120546105ce90611833565b6001600160a01b0381166000908152600760205260408120546105ce565b600060608082808083610b5a7f0000000000000000000000000000000000000000000000000000000000000000600561189c565b610b857f0000000000000000000000000000000000000000000000000000000000000000600661189c565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6000610bb9610c16565b65ffffffffffff168210610c0b5760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b6044820152606401610699565b6105ce600b836116c3565b60006108ef43611947565b60606004805461052d906128e1565b6001600160a01b0381166000908152600a60205260408120548015610c9f576001600160a01b0383166000908152600a6020526040902080546000198301908110610c7d57610c7d6129cc565b60009182526020909120015464010000000090046001600160e01b0316610ca2565b60005b6001600160e01b03169392505050565b336000908152600c602052604081208054839290610cd19084906129b9565b909155505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d0d61114c565b6001600160a01b031614610d5b5760405163973d02cb60e01b815260206004820152601460248201527313db9b1e48189c9a5919d94818d85b8818d85b1b60621b6044820152606401610699565b610a3183836119ae565b600080610d7061114c565b90506000610d7e828661109d565b905083811015610dde5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610699565b6108da8286868403611156565b600080610df661114c565b90506105c88185856113eb565b83421115610e535760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610699565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610ecd90610ec59060a001604051602081830303815290604052805190602001206119b8565b8585856119e5565b9050610ed881611a0d565b8614610f265760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610699565b610f3081886117ba565b50505050505050565b83421115610f895760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610699565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610fb88c611a0d565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000611013826119b8565b90506000611023828787876119e5565b9050896001600160a01b0316816001600160a01b0316146110865760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610699565b6110918a8a8a611156565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020805463ffffffff841690811061110c5761110c6129cc565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b60006108ef611a35565b6001600160a01b0383166111b85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610699565b6001600160a01b0382166112195760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610699565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000815160000361128d57506000919050565b506020015190565b60008060016112ab6112a688611a90565b6119b8565b6040805160008152602081018083529290925260ff861690820152606081018790526080810186905260a0016020604051602081039080840390855afa1580156112f9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166113505760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606401610699565b866001600160a01b0316816001600160a01b03161491505095945050505050565b600061137d848461109d565b905060001981146113e557818110156113d85760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610699565b6113e58484848403611156565b50505050565b6001600160a01b03831661144f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610699565b6001600160a01b0382166114b15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610699565b6001600160a01b038316600090815260208190526040902054818110156115295760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610699565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36113e5848484611b12565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156115ee57507f000000000000000000000000000000000000000000000000000000000000000046145b1561161857507f000000000000000000000000000000000000000000000000000000000000000090565b6108ef604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b90565b81546000908181600581111561171d5760006116de84611b1d565b6116e890856129e2565b600088815260209020909150869082015463ffffffff16111561170d5780915061171b565b6117188160016129b9565b92505b505b8082101561176a5760006117318383611c05565b600088815260209020909150869082015463ffffffff16111561175657809150611764565b6117618160016129b9565b92505b5061171d565b8015611796576000868152602090208101600019015464010000000090046001600160e01b0316611799565b60005b6001600160e01b03169695505050505050565b6117b68282611c20565b5050565b6001600160a01b038281166000818152600960208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46113e5828483611caa565b600063ffffffff8211156118985760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610699565b5090565b606060ff83146118b6576118af83611de7565b90506105ce565b8180546118c2906128e1565b80601f01602080910402602001604051908101604052809291908181526020018280546118ee906128e1565b801561193b5780601f106119105761010080835404028352916020019161193b565b820191906000526020600020905b81548152906001019060200180831161191e57829003601f168201915b505050505090506105ce565b600065ffffffffffff8211156118985760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610699565b6117b68282611e26565b60006105ce6119c5611595565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006119f687878787611e3e565b91509150611a0381611f02565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b6000303303611a8b57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506116c09050565b503390565b6000604051806080016040528060438152602001612a446043913980516020918201208351848301516040808701518051908601209051611af0950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b505050565b611b0d83838361204c565b600081600003611b2f57506000919050565b60006001611b3c8461207e565b901c6001901b90506001818481611b5557611b556129f5565b048201901c90506001818481611b6d57611b6d6129f5565b048201901c90506001818481611b8557611b856129f5565b048201901c90506001818481611b9d57611b9d6129f5565b048201901c90506001818481611bb557611bb56129f5565b048201901c90506001818481611bcd57611bcd6129f5565b048201901c90506001818481611be557611be56129f5565b048201901c905061099e81828581611bff57611bff6129f5565b04612112565b6000611c146002848418612a0b565b61099e908484166129b9565b611c2a8282612128565b6002546001600160e01b031015611c9c5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610699565b6113e5600b6121ef836121fb565b816001600160a01b0316836001600160a01b031614158015611ccc5750600081115b15611b0d576001600160a01b03831615611d5a576001600160a01b0383166000908152600a602052604081208190611d0790612370856121fb565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611d4f929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611b0d576001600160a01b0382166000908152600a602052604081208190611d90906121ef856121fb565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611dd8929190918252602082015260400190565b60405180910390a25050505050565b60606000611df48361237c565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b611e3082826123a4565b6113e5600b612370836121fb565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611e755750600090506003611ef9565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611ec9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ef257600060019250925050611ef9565b9150600090505b94509492505050565b6000816004811115611f1657611f16612a2d565b03611f1e5750565b6001816004811115611f3257611f32612a2d565b03611f7f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610699565b6002816004811115611f9357611f93612a2d565b03611fe05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610699565b6003816004811115611ff457611ff4612a2d565b03610ae35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610699565b6001600160a01b03838116600090815260096020526040808220548584168352912054611b0d92918216911683611caa565b600080608083901c1561209357608092831c92015b604083901c156120a557604092831c92015b602083901c156120b757602092831c92015b601083901c156120c957601092831c92015b600883901c156120db57600892831c92015b600483901c156120ed57600492831c92015b600283901c156120ff57600292831c92015b600183901c156105ce5760010192915050565b6000818310612121578161099e565b5090919050565b6001600160a01b03821661217e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610699565b806002600082825461219091906129b9565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36117b660008383611b12565b600061099e82846129b9565b825460009081908181156122485760008781526020902082016000190160408051808201909152905463ffffffff8116825264010000000090046001600160e01b0316602082015261225d565b60408051808201909152600080825260208201525b905080602001516001600160e01b0316935061227d84868863ffffffff16565b92506000821180156122a75750612292610c16565b65ffffffffffff16816000015163ffffffff16145b156122ec576122b5836124dd565b60008881526020902083016000190180546001600160e01b03929092166401000000000263ffffffff909216919091179055612366565b866040518060400160405280612310612303610c16565b65ffffffffffff16611833565b63ffffffff168152602001612324866124dd565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b600061099e82846129e2565b600060ff8216601f8111156105ce57604051632cd44ac360e21b815260040160405180910390fd5b6001600160a01b0382166124045760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610699565b6001600160a01b038216600090815260208190526040902054818110156124785760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610699565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611b0d83600084611b12565b60006001600160e01b038211156118985760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610699565b60005b83811015612561578181015183820152602001612549565b50506000910152565b60008151808452612582816020860160208601612546565b601f01601f19169290920160200192915050565b60208152600061099e602083018461256a565b80356001600160a01b03811681146125c057600080fd5b919050565b600080604083850312156125d857600080fd5b6125e1836125a9565b946020939093013593505050565b803560ff811681146125c057600080fd5b60008060008060008060a0878903121561261957600080fd5b612622876125a9565b9550602087013567ffffffffffffffff8082111561263f57600080fd5b818901915089601f83011261265357600080fd5b81358181111561266257600080fd5b8a602082850101111561267457600080fd5b602083019750809650505050604087013592506060870135915061269a608088016125ef565b90509295509295509295565b6000806000606084860312156126bb57600080fd5b6126c4846125a9565b92506126d2602085016125a9565b9150604084013590509250925092565b6000602082840312156126f457600080fd5b61099e826125a9565b60ff60f81b881681526000602060e08184015261271d60e084018a61256a565b838103604085015261272f818a61256a565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561278157835183529284019291840191600101612765565b50909c9b505050505050505050505050565b6000602082840312156127a557600080fd5b5035919050565b60008060008060008060c087890312156127c557600080fd5b6127ce876125a9565b955060208701359450604087013593506127ea606088016125ef565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561281f57600080fd5b612828886125a9565b9650612836602089016125a9565b95506040880135945060608801359350612852608089016125ef565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561288157600080fd5b61288a836125a9565b9150612898602084016125a9565b90509250929050565b600080604083850312156128b457600080fd5b6128bd836125a9565b9150602083013563ffffffff811681146128d657600080fd5b809150509250929050565b600181811c908216806128f557607f821691505b602082108103611a2f57634e487b7160e01b600052602260045260246000fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b6000825161294d818460208701612546565b9190910192915050565b6001600160a01b0385811682528416602082015260606040820181905281018290526000828460808401376000608084840101526080601f19601f850116830101905095945050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156105ce576105ce6129a3565b634e487b7160e01b600052603260045260246000fd5b818103818111156105ce576105ce6129a3565b634e487b7160e01b600052601260045260246000fd5b600082612a2857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a26469706673582212200cbc6c7d6a5d32a79389235584caa3e7c80cf37266c37a5d06cef2f129225fb964736f6c63430008130033';

type NFTLConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: NFTLConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTL__factory extends ContractFactory {
  constructor(...args: NFTLConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    bridge_: AddressLike,
    rootToken_: AddressLike,
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(bridge_, rootToken_, name_, symbol_, overrides || {});
  }
  override deploy(
    bridge_: AddressLike,
    rootToken_: AddressLike,
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(bridge_, rootToken_, name_, symbol_, overrides || {}) as Promise<
      NFTL & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTL__factory {
    return super.connect(runner) as NFTL__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTLInterface {
    return new Interface(_abi) as NFTLInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NFTL {
    return new Contract(address, _abi, runner) as unknown as NFTL;
  }
}
