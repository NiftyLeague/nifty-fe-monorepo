/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers6';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers6';
import type { NonPayableOverrides } from '../../../common';
import type { NiftyItemSale, NiftyItemSaleInterface } from '../../../src/contracts/NiftyItemSale';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'itemId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'oldLimitCount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newLimitCount',
        type: 'uint256',
      },
    ],
    name: 'ItemLimitUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'itemId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'oldItemMaxCount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newItemMaxCount',
        type: 'uint256',
      },
    ],
    name: 'ItemMaxCountSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'itemId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'oldItemPrice',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newItemPrice',
        type: 'uint256',
      },
    ],
    name: 'ItemPriceSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'itemIds',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: 'ItemPurchased',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'burnAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'treasuryAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'daoAmount',
        type: 'uint256',
      },
    ],
    name: 'NFTLWitdraw',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'oldBurnPercentage',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'oldTreasuryPercentage',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'oldDAOPercentage',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newBurnPercentage',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newTreasuryPercentage',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newDAOPercentage',
        type: 'uint256',
      },
    ],
    name: 'TokenPercentagesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: 'burnPercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dao',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'daoPercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_itemId',
        type: 'uint256',
      },
    ],
    name: 'getRemainingItemCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_items',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_nftl',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_treasury',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_dao',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_burnPercentage',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_treasuryPercentage',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_daoPercentage',
        type: 'uint256',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'itemLimitPerAdress',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'itemMaxCounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'itemPrices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'items',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nftl',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: '_itemIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: '_amounts',
        type: 'uint256[]',
      },
    ],
    name: 'purchaseItems',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_itemId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_limitCount',
        type: 'uint256',
      },
    ],
    name: 'setItemLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: '_itemIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: '_maxCounts',
        type: 'uint256[]',
      },
    ],
    name: 'setItemMaxCounts',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: '_itemIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: '_nftlAmounts',
        type: 'uint256[]',
      },
    ],
    name: 'setItemPrices',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treasury',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treasuryPercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_burnPercentage',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_treasuryPercentage',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_daoPercentage',
        type: 'uint256',
      },
    ],
    name: 'updateTokenPercentages',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50611bc3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80637ab56083116100c3578063bf91ad9e1161007c578063bf91ad9e146102ae578063bf9dc86a146102ce578063c06fad06146102ee578063e77fc7a414610301578063f01f20df14610314578063f2fde38b1461031d57600080fd5b80637ab560831461025d5780638456cb5914610266578063868661cb1461026e5780638da5cb5b1461027757806396e851ab14610288578063b82a94131461029b57600080fd5b80633f4ba83a116101155780633f4ba83a146101e65780634162169f146101ee5780634e81da0a146102195780635c975abb1461022c57806361d027b314610242578063715018a61461025557600080fd5b8063010897661461015d5780630e22d59b146101905780630e55d70c146101a55780631d8d71f0146101b85780633ccfd60b146101cb5780633f46baab146101d3575b600080fd5b61017d61016b36600461171c565b60cd6020526000908152604090205481565b6040519081526020015b60405180910390f35b6101a361019e366004611735565b610330565b005b6101a36101b33660046117ad565b610406565b6101a36101c63660046117ad565b61060a565b6101a3610925565b61017d6101e136600461171c565b610ad3565b6101a3610b60565b60cf54610201906001600160a01b031681565b6040516001600160a01b039091168152602001610187565b60ca54610201906001600160a01b031681565b60975460ff166040519015158152602001610187565b60ce54610201906001600160a01b031681565b6101a3610b72565b61017d60d15481565b6101a3610b84565b61017d60d25481565b6033546001600160a01b0316610201565b6101a36102963660046117ad565b610b94565b6101a36102a9366004611819565b610e18565b61017d6102bc36600461171c565b60cb6020526000908152604090205481565b61017d6102dc36600461171c565b60cc6020526000908152604090205481565b60c954610201906001600160a01b031681565b6101a361030f366004611857565b610e83565b61017d60d05481565b6101a361032b3660046118c6565b61105f565b6103386110d8565b8061034383856118fe565b61034d91906118fe565b6103e8146103985760405162461bcd60e51b8152602060048201526013602482015272496e76616c69642070657263656e746167657360681b60448201526064015b60405180910390fd5b60d05460d15460d25460408051938452602084019290925290820152606081018490526080810183905260a0810182905233907fe40b11ca40e9f152af537db8dc8c682648bd89d6cad4587db31993922b5a7e7d9060c00160405180910390a260d09290925560d15560d255565b61040e6110d8565b82811461042d5760405162461bcd60e51b815260040161038f90611916565b60005b8381101561060357600685858381811061044c5761044c611941565b90506020020135116104975760405162461bcd60e51b8152602060048201526014602482015273546f6b656e204944206c657373207468616e203760601b604482015260640161038f565b670de0b6b3a76400008383838181106104b2576104b2611941565b9050602002013510156105005760405162461bcd60e51b8152602060048201526016602482015275141c9a58d9481b195cdcc81d1a185b880c481391951360521b604482015260640161038f565b337f68d829accea5a50e994ba8f0db95e96cb144e8518d7253e83b89e7b99a8cf70086868481811061053457610534611941565b9050602002013560cb600089898781811061055157610551611941565b9050602002013581526020019081526020016000205486868681811061057957610579611941565b905060200201356040516105a0939291909283526020830191909152604082015260600190565b60405180910390a28282828181106105ba576105ba611941565b9050602002013560cb60008787858181106105d7576105d7611941565b9050602002013581526020019081526020016000208190555080806105fb90611957565b915050610430565b5050505050565b610612611132565b61061a61118c565b8281146106395760405162461bcd60e51b815260040161038f90611916565b6000806000805b8681101561083a5787878281811061065a5761065a611941565b90506020020135925085858281811061067557610675611941565b905060200201359150600060cb600085815260200190815260200160002054116106ce5760405162461bcd60e51b815260206004820152600a6024820152695a65726f20707269636560b01b604482015260640161038f565b6106d783610ad3565b8211156107265760405162461bcd60e51b815260206004820152601860248201527f52656d61696e696e6720636f756e74206f766572666c6f770000000000000000604482015260640161038f565b600083815260cd602052604090205480156108005760c954604051627eeac760e11b8152336004820152602481018690526000916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610789573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ad9190611972565b9050816107ba85836118fe565b11156107fe5760405162461bcd60e51b81526020600482015260136024820152724974656d206c696d6974206f766572666c6f7760681b604482015260640161038f565b505b600084815260cb602052604090205461081a90849061198b565b61082490866118fe565b945050808061083290611957565b915050610640565b5060ca54610853906001600160a01b03163330866111d2565b60c95460408051602081018252600081529051630fbfeffd60e11b81526001600160a01b0390921691631f7fdffa916108999133918c918c918c918c9190600401611a38565b600060405180830381600087803b1580156108b357600080fd5b505af11580156108c7573d6000803e3d6000fd5b50505050336001600160a01b03167f2984a062306d2c08d91ade1337420532e9438d57c2dd5b19b7cb3dbb17230c948888888860405161090a9493929190611a91565b60405180910390a250505061091f6001606555565b50505050565b61092d6110d8565b60ca546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a9190611972565b905060006103e860d054836109af919061198b565b6109b99190611ab8565b905060006103e860d154846109ce919061198b565b6109d89190611ab8565b90506000816109e78486611ada565b6109f19190611ada565b60ca54604051630852cd8d60e31b8152600481018690529192506001600160a01b0316906342966c6890602401600060405180830381600087803b158015610a3857600080fd5b505af1158015610a4c573d6000803e3d6000fd5b505060ce5460ca54610a6d93506001600160a01b0390811692501684611244565b60cf5460ca54610a8a916001600160a01b03918216911683611244565b604080518481526020810184905290810182905233907f63895a06532581c620ae1971802a5d56eb36cd7057450604c025260c24b333d79060600160405180910390a250505050565b60c95460405163bd85b03960e01b8152600481018390526000916001600160a01b03169063bd85b03990602401602060405180830381865afa158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b419190611972565b600083815260cc6020526040902054610b5a9190611ada565b92915050565b610b686110d8565b610b70611279565b565b610b7a6110d8565b610b7060006112cb565b610b8c6110d8565b610b7061131d565b610b9c6110d8565b828114610bbb5760405162461bcd60e51b815260040161038f90611916565b60005b83811015610603576006858583818110610bda57610bda611941565b9050602002013511610c255760405162461bcd60e51b8152602060048201526014602482015273546f6b656e204944206c657373207468616e203760601b604482015260640161038f565b60c9546001600160a01b031663bd85b039868684818110610c4857610c48611941565b905060200201356040518263ffffffff1660e01b8152600401610c6d91815260200190565b602060405180830381865afa158015610c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cae9190611972565b838383818110610cc057610cc0611941565b905060200201351015610d155760405162461bcd60e51b815260206004820181905260248201527f4d617820636f756e74206c657373207468616e20746f74616c20737570706c79604482015260640161038f565b337ff28265c485be16f26bcbad6982414412aa39c7d6d4b5523d38eee7938f04665c868684818110610d4957610d49611941565b9050602002013560cc6000898987818110610d6657610d66611941565b90506020020135815260200190815260200160002054868686818110610d8e57610d8e611941565b90506020020135604051610db5939291909283526020830191909152604082015260600190565b60405180910390a2828282818110610dcf57610dcf611941565b9050602002013560cc6000878785818110610dec57610dec611941565b905060200201358152602001908152602001600020819055508080610e1090611957565b915050610bbe565b610e206110d8565b600082815260cd60209081526040918290205482518581529182015290810182905233907f5531364a0d55aafe58acbe657d9b99102de6db552982a198bd263ef59efc36839060600160405180910390a2600091825260cd602052604090912055565b600054610100900460ff1615808015610ea35750600054600160ff909116105b80610ebd5750303b158015610ebd575060005460ff166001145b610f205760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161038f565b6000805460ff191660011790558015610f43576000805461ff0019166101001790555b610f4b61135a565b610f53611389565b610f5b6113b8565b81610f6684866118fe565b610f7091906118fe565b6103e814610fb65760405162461bcd60e51b8152602060048201526013602482015272496e76616c69642070657263656e746167657360681b604482015260640161038f565b60c980546001600160a01b03808b166001600160a01b03199283161790925560ca80548a841690831617905560ce805489841690831617905560cf80549288169290911691909117905560d084905560d183905560d28290558015611055576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6110676110d8565b6001600160a01b0381166110cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161038f565b6110d5816112cb565b50565b6033546001600160a01b03163314610b705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161038f565b600260655414156111855760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161038f565b6002606555565b60975460ff1615610b705760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161038f565b6040516001600160a01b038085166024830152831660448201526064810182905261091f9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113e7565b6001606555565b6040516001600160a01b03831660248201526044810182905261127490849063a9059cbb60e01b90606401611206565b505050565b6112816114bc565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61132561118c565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112ae3390565b600054610100900460ff166113815760405162461bcd60e51b815260040161038f90611af1565b610b70611505565b600054610100900460ff166113b05760405162461bcd60e51b815260040161038f90611af1565b610b70611535565b600054610100900460ff166113df5760405162461bcd60e51b815260040161038f90611af1565b610b7061155c565b600061143c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661158f9092919063ffffffff16565b905080516000148061145d57508080602001905181019061145d9190611b3c565b6112745760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161038f565b60975460ff16610b705760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161038f565b600054610100900460ff1661152c5760405162461bcd60e51b815260040161038f90611af1565b610b70336112cb565b600054610100900460ff1661123d5760405162461bcd60e51b815260040161038f90611af1565b600054610100900460ff166115835760405162461bcd60e51b815260040161038f90611af1565b6097805460ff19169055565b606061159e84846000856115a6565b949350505050565b6060824710156116075760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161038f565b600080866001600160a01b031685876040516116239190611b5e565b60006040518083038185875af1925050503d8060008114611660576040519150601f19603f3d011682016040523d82523d6000602084013e611665565b606091505b509150915061167687838387611681565b979650505050505050565b606083156116ed5782516116e6576001600160a01b0385163b6116e65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161038f565b508161159e565b61159e83838151156117025781518083602001fd5b8060405162461bcd60e51b815260040161038f9190611b7a565b60006020828403121561172e57600080fd5b5035919050565b60008060006060848603121561174a57600080fd5b505081359360208301359350604090920135919050565b60008083601f84011261177357600080fd5b50813567ffffffffffffffff81111561178b57600080fd5b6020830191508360208260051b85010111156117a657600080fd5b9250929050565b600080600080604085870312156117c357600080fd5b843567ffffffffffffffff808211156117db57600080fd5b6117e788838901611761565b9096509450602087013591508082111561180057600080fd5b5061180d87828801611761565b95989497509550505050565b6000806040838503121561182c57600080fd5b50508035926020909101359150565b80356001600160a01b038116811461185257600080fd5b919050565b600080600080600080600060e0888a03121561187257600080fd5b61187b8861183b565b96506118896020890161183b565b95506118976040890161183b565b94506118a56060890161183b565b9699959850939660808101359560a0820135955060c0909101359350915050565b6000602082840312156118d857600080fd5b6118e18261183b565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611911576119116118e8565b500190565b6020808252601190820152704d69736d61746368656420706172616d7360781b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561196b5761196b6118e8565b5060010190565b60006020828403121561198457600080fd5b5051919050565b60008160001904831182151516156119a5576119a56118e8565b500290565b81835260006001600160fb1b038311156119c357600080fd5b8260051b8083602087013760009401602001938452509192915050565b60005b838110156119fb5781810151838201526020016119e3565b8381111561091f5750506000910152565b60008151808452611a248160208601602086016119e0565b601f01601f19169290920160200192915050565b6001600160a01b0387168152608060208201819052600090611a5d90830187896119aa565b8281036040840152611a708186886119aa565b90508281036060840152611a848185611a0c565b9998505050505050505050565b604081526000611aa56040830186886119aa565b82810360208401526116768185876119aa565b600082611ad557634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611aec57611aec6118e8565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611b4e57600080fd5b815180151581146118e157600080fd5b60008251611b708184602087016119e0565b9190910192915050565b6020815260006118e16020830184611a0c56fea2646970667358221220bc6fce6be4896751ade9786995d9bb940cb2280fc83c4ab75ce922daa0a2046d64736f6c634300080b0033';

type NiftyItemSaleConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: NiftyItemSaleConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class NiftyItemSale__factory extends ContractFactory {
  constructor(...args: NiftyItemSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NiftyItemSale & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NiftyItemSale__factory {
    return super.connect(runner) as NiftyItemSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NiftyItemSaleInterface {
    return new Interface(_abi) as NiftyItemSaleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NiftyItemSale {
    return new Contract(address, _abi, runner) as unknown as NiftyItemSale;
  }
}
