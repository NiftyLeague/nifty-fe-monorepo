/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers6';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers6';
import type { NonPayableOverrides } from '../../../../common';
import type {
  AllowedColorsStorage,
  AllowedColorsStorageInterface,
} from '../../../../src/contracts/lib/AllowedColorsStorage';

const _abi = [
  {
    inputs: [
      { internalType: 'uint256', name: 'tribe', type: 'uint256' },
      { internalType: 'string', name: 'message', type: 'string' },
    ],
    name: 'InvalidTribe',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'tribe', type: 'uint256' },
      { internalType: 'uint256', name: 'color', type: 'uint256' },
    ],
    name: 'isAllowedColor',
    outputs: [{ internalType: 'bool', name: 'allowed', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'uint256', name: 'tribe', type: 'uint256' },
      { internalType: 'uint256[]', name: 'colors', type: 'uint256[]' },
      { internalType: 'bool', name: 'allowed', type: 'bool' },
    ],
    name: 'setAllowedColorsOnTribe',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104548061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780637d6f971f146100665780638da5cb5b14610079578063968ef8f514610099578063f2fde38b146100d7575b600080fd5b6100646100ea565b005b6100646100743660046102f8565b6100fe565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100c76100a736600461038f565b600091825260016020908152604080842092845291905290205460ff1690565b6040519015158152602001610090565b6100646100e53660046103b1565b6101d5565b6100f261024e565b6100fc60006102a8565b565b61010661024e565b60018410806101155750600984115b1561016e578360405163f3b30a5960e01b815260040161016591815260406020820181905260169082015275125b9d985b1a59081d1c9a5899481c1c9bdd9a59195960521b606082015260800190565b60405180910390fd5b8160005b818110156101cd576101bd86868684818110610190576101906103e1565b60009384526001602090815260408086209282029490940135855252509020805460ff1916851515179055565b6101c6816103f7565b9050610172565b505050505050565b6101dd61024e565b6001600160a01b0381166102425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610165565b61024b816102a8565b50565b6000546001600160a01b031633146100fc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610165565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000806060858703121561030e57600080fd5b84359350602085013567ffffffffffffffff8082111561032d57600080fd5b818701915087601f83011261034157600080fd5b81358181111561035057600080fd5b8860208260051b850101111561036557600080fd5b6020830195508094505050506040850135801515811461038457600080fd5b939692955090935050565b600080604083850312156103a257600080fd5b50508035926020909101359150565b6000602082840312156103c357600080fd5b81356001600160a01b03811681146103da57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161041757634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122047c61eed6637ec4b1f4b7d2bb6444bd819fdfb78bbd9dd321ff40cbc806cf5b864736f6c63430008130033';

type AllowedColorsStorageConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: AllowedColorsStorageConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class AllowedColorsStorage__factory extends ContractFactory {
  constructor(...args: AllowedColorsStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AllowedColorsStorage & { deploymentTransaction(): ContractTransactionResponse }
    >;
  }
  override connect(runner: ContractRunner | null): AllowedColorsStorage__factory {
    return super.connect(runner) as AllowedColorsStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllowedColorsStorageInterface {
    return new Interface(_abi) as AllowedColorsStorageInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AllowedColorsStorage {
    return new Contract(address, _abi, runner) as unknown as AllowedColorsStorage;
  }
}
