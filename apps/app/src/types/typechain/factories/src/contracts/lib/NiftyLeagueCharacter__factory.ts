/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers6';
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from 'ethers6';
import type { NonPayableOverrides } from '../../../../common';
import type {
  NiftyLeagueCharacter,
  NiftyLeagueCharacterInterface,
} from '../../../../src/contracts/lib/NiftyLeagueCharacter';

const _abi = [
  {
    inputs: [
      { internalType: 'address', name: 'nftlAddress', type: 'address' },
      { internalType: 'string', name: 'name', type: 'string' },
      { internalType: 'string', name: 'symbol', type: 'string' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'approved', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'operator', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'getCharacterTraits',
    outputs: [
      {
        components: [
          { internalType: 'uint16', name: 'tribe', type: 'uint16' },
          { internalType: 'uint16', name: 'skinColor', type: 'uint16' },
          { internalType: 'uint16', name: 'furColor', type: 'uint16' },
          { internalType: 'uint16', name: 'eyeColor', type: 'uint16' },
          { internalType: 'uint16', name: 'pupilColor', type: 'uint16' },
          { internalType: 'uint16', name: 'hair', type: 'uint16' },
          { internalType: 'uint16', name: 'mouth', type: 'uint16' },
          { internalType: 'uint16', name: 'beard', type: 'uint16' },
          { internalType: 'uint16', name: 'top', type: 'uint16' },
          { internalType: 'uint16', name: 'outerwear', type: 'uint16' },
          { internalType: 'uint16', name: 'print', type: 'uint16' },
          { internalType: 'uint16', name: 'bottom', type: 'uint16' },
          { internalType: 'uint16', name: 'footwear', type: 'uint16' },
          { internalType: 'uint16', name: 'belt', type: 'uint16' },
          { internalType: 'uint16', name: 'hat', type: 'uint16' },
          { internalType: 'uint16', name: 'eyewear', type: 'uint16' },
          { internalType: 'uint16', name: 'piercing', type: 'uint16' },
          { internalType: 'uint16', name: 'wrist', type: 'uint16' },
          { internalType: 'uint16', name: 'hands', type: 'uint16' },
          { internalType: 'uint16', name: 'neckwear', type: 'uint16' },
          { internalType: 'uint16', name: 'leftItem', type: 'uint16' },
          { internalType: 'uint16', name: 'rightItem', type: 'uint16' },
        ],
        internalType: 'struct NiftyLeagueCharacter.CharacterTraits',
        name: '_characterTraits',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRemovedTraits',
    outputs: [{ internalType: 'uint16[]', name: 'removedTraits', type: 'uint16[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'address', name: 'operator', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'trait', type: 'uint256' }],
    name: 'isAvailableTrait',
    outputs: [{ internalType: 'bool', name: 'available', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'traitCombo', type: 'uint256' }],
    name: 'isUnique',
    outputs: [{ internalType: 'bool', name: 'unique', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'pauseMinting', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [],
    name: 'paused',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'operator', type: 'address' },
      { internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'unpauseMinting', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  { inputs: [], name: 'withdraw', outputs: [], stateMutability: 'nonpayable', type: 'function' },
] as const;

const _bytecode =
  '0x60a06040523480156200001157600080fd5b5060405162001f3a38038062001f3a833981016040819052620000349162000207565b8181600062000044838262000320565b50600162000053828262000320565b505050620000706200006a620000ec60201b60201c565b620000f0565b6006805460ff60a01b191690556001600160a01b038316620000d85760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964204e46544c20746f6b656e2061646472657373000000000000604482015260640160405180910390fd5b50506001600160a01b0316608052620003ec565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016a57600080fd5b81516001600160401b038082111562000187576200018762000142565b604051601f8301601f19908116603f01168101908282118183101715620001b257620001b262000142565b81604052838152602092508683858801011115620001cf57600080fd5b600091505b83821015620001f35785820183015181830184015290820190620001d4565b600093810190920192909252949350505050565b6000806000606084860312156200021d57600080fd5b83516001600160a01b03811681146200023557600080fd5b60208501519093506001600160401b03808211156200025357600080fd5b620002618783880162000158565b935060408601519150808211156200027857600080fd5b50620002878682870162000158565b9150509250925092565b600181811c90821680620002a657607f821691505b602082108103620002c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031b57600081815260208120601f850160051c81016020861015620002f65750805b601f850160051c820191505b81811015620003175782815560010162000302565b5050505b505050565b81516001600160401b038111156200033c576200033c62000142565b62000354816200034d845462000291565b84620002cd565b602080601f8311600181146200038c5760008415620003735750858301515b600019600386901b1c1916600185901b17855562000317565b600085815260208120601f198616915b82811015620003bd578886015182559484019460019091019084016200039c565b5085821015620003dc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051611b356200040560003960005050611b356000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063ae2003221161007c578063ae200322146102ff578063b88d4fde14610307578063c87b56dd1461031a578063da8fbf2a1461032d578063e985e9c514610335578063f2fde38b1461037157600080fd5b806370a082311461028a578063715018a6146102ab5780638da5cb5b146102b357806395d89b41146102c45780639b046ed3146102cc578063a22cb465146102ec57600080fd5b806317bed2c51161011557806317bed2c51461022257806323b872dd146102375780633ccfd60b1461024a57806342842e0e146102525780635c975abb146102655780636352211e1461027757600080fd5b806301ffc9a71461015d57806306fdde03146101855780630750d2fb1461019a578063081812fc146101be578063095ea7b3146101e95780631656efc6146101fe575b600080fd5b61017061016b36600461150f565b610384565b60405190151581526020015b60405180910390f35b61018d6103d6565b60405161017c919061157c565b6101706101a836600461158f565b60009081526008602052604090205460ff161590565b6101d16101cc36600461158f565b610468565b6040516001600160a01b03909116815260200161017c565b6101fc6101f73660046115c4565b61048f565b005b61017061020c36600461158f565b60009081526009602052604090205460ff161590565b61022a6105a9565b60405161017c91906115ee565b6101fc610245366004611636565b610628565b6101fc610659565b6101fc610260366004611636565b610694565b600654600160a01b900460ff16610170565b6101d161028536600461158f565b6106af565b61029d610298366004611672565b61070f565b60405190815260200161017c565b6101fc610795565b6006546001600160a01b03166101d1565b61018d6107a9565b6102df6102da36600461158f565b6107b8565b60405161017c919061168d565b6101fc6102fa3660046117f7565b610bab565b6101fc610bb6565b6101fc610315366004611849565b610bc6565b61018d61032836600461158f565b610bfe565b6101fc610c72565b610170610343366004611925565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101fc61037f366004611672565b610c82565b60006001600160e01b031982166380ac58cd60e01b14806103b557506001600160e01b03198216635b5e139f60e01b145b806103d057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103e590611958565b80601f016020809104026020016040519081016040528092919081815260200182805461041190611958565b801561045e5780601f106104335761010080835404028352916020019161045e565b820191906000526020600020905b81548152906001019060200180831161044157829003601f168201915b5050505050905090565b600061047382610cfb565b506000908152600460205260409020546001600160a01b031690565b600061049a826106af565b9050806001600160a01b0316836001600160a01b03160361050c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061052857506105288133610343565b61059a5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610503565b6105a48383610d5a565b505050565b6060600a80548060200260200160405190810160405280929190818152602001828054801561045e57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116105e65790505050505050905090565b6106323382610dc8565b61064e5760405162461bcd60e51b815260040161050390611992565b6105a4838383610e47565b610661610fab565b6040514790339082156108fc029083906000818181858888f19350505050158015610690573d6000803e3d6000fd5b5050565b6105a483838360405180602001604052806000815250610bc6565b6000818152600260205260408120546001600160a01b0316806103d05760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610503565b60006001600160a01b0382166107795760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610503565b506001600160a01b031660009081526003602052604090205490565b61079d610fab565b6107a76000611005565b565b6060600180546103e590611958565b604080516102c08101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301829052610160830182905261018083018290526101a083018290526101c083018290526101e08301829052610200830182905261022083018290526102408301829052610260830182905261028083018290526102a083018290528482526002905291909120546001600160a01b03166108be5760405162461bcd60e51b81526020600482015260116024820152703737b732bc34b9ba32b73a103a37b5b2b760791b6044820152606401610503565b600060076000848152602001908152602001600020604051806040016040529081600082015481526020016001820180546108f890611958565b80601f016020809104026020016040519081016040528092919081815260200182805461092490611958565b80156109715780601f1061094657610100808354040283529160200191610971565b820191906000526020600020905b81548152906001019060200180831161095457829003601f168201915b5050509190925250508151919250506103ff1661ffff168252805161099a90600a1c6103ff1690565b61ffff16602083015280516109b39060141c6103ff1690565b61ffff16604083015280516109cc90601e1c6103ff1690565b61ffff16606083015280516109e59060281c6103ff1690565b61ffff16608083015280516109fe9060321c6103ff1690565b61ffff1660a08301528051610a1790603c1c6103ff1690565b61ffff1660c08301528051610a309060461c6103ff1690565b61ffff1660e08301528051610a499060501c6103ff1690565b61ffff166101008301528051610a6390605a1c6103ff1690565b61ffff166101208301528051610a7d9060641c6103ff1690565b61ffff166101408301528051610a9790606e1c6103ff1690565b61ffff166101608301528051610ab19060781c6103ff1690565b61ffff166101808301528051610acb9060821c6103ff1690565b61ffff166101a08301528051610ae590608c1c6103ff1690565b61ffff166101c08301528051610aff9060961c6103ff1690565b61ffff166101e08301528051610b199060a01c6103ff1690565b61ffff166102008301528051610b339060aa1c6103ff1690565b61ffff166102208301528051610b4d9060b41c6103ff1690565b61ffff166102408301528051610b679060be1c6103ff1690565b61ffff166102608301528051610b819060c81c6103ff1690565b61ffff166102808301528051610b9b9060d21c6103ff1690565b61ffff166102a083015250919050565b610690338383611057565b610bbe610fab565b6107a7611125565b610bd03383610dc8565b610bec5760405162461bcd60e51b815260040161050390611992565b610bf88484848461117a565b50505050565b6060610c0982610cfb565b6000610c2060408051602081019091526000815290565b90506000815111610c405760405180602001604052806000815250610c6b565b80610c4a846111ad565b604051602001610c5b9291906119df565b6040516020818303038152906040525b9392505050565b610c7a610fab565b6107a7611240565b610c8a610fab565b6001600160a01b038116610cef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610503565b610cf881611005565b50565b6000818152600260205260409020546001600160a01b0316610cf85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610503565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d8f826106af565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610dd4836106af565b9050806001600160a01b0316846001600160a01b03161480610e1b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610e3f5750836001600160a01b0316610e3484610468565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e5a826106af565b6001600160a01b031614610e805760405162461bcd60e51b815260040161050390611a0e565b6001600160a01b038216610ee25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610503565b826001600160a01b0316610ef5826106af565b6001600160a01b031614610f1b5760405162461bcd60e51b815260040161050390611a0e565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146107a75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610503565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036110b85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610503565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61112d611283565b6006805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b611185848484610e47565b611191848484846112d3565b610bf85760405162461bcd60e51b815260040161050390611a53565b606060006111ba836113d4565b600101905060008167ffffffffffffffff8111156111da576111da611833565b6040519080825280601f01601f191660200182016040528015611204576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461120e57509392505050565b6112486114ac565b6006805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861115d3390565b600654600160a01b900460ff166107a75760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610503565b60006001600160a01b0384163b156113c957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611317903390899088908890600401611aa5565b6020604051808303816000875af1925050508015611352575060408051601f3d908101601f1916820190925261134f91810190611ae2565b60015b6113af573d808015611380576040519150601f19603f3d011682016040523d82523d6000602084013e611385565b606091505b5080516000036113a75760405162461bcd60e51b815260040161050390611a53565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e3f565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114135772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061143f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061145d57662386f26fc10000830492506010015b6305f5e1008310611475576305f5e100830492506008015b612710831061148957612710830492506004015b6064831061149b576064830492506002015b600a83106103d05760010192915050565b600654600160a01b900460ff16156107a75760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610503565b6001600160e01b031981168114610cf857600080fd5b60006020828403121561152157600080fd5b8135610c6b816114f9565b60005b8381101561154757818101518382015260200161152f565b50506000910152565b6000815180845261156881602086016020860161152c565b601f01601f19169290920160200192915050565b602081526000610c6b6020830184611550565b6000602082840312156115a157600080fd5b5035919050565b80356001600160a01b03811681146115bf57600080fd5b919050565b600080604083850312156115d757600080fd5b6115e0836115a8565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561162a57835161ffff168352928401929184019160010161160a565b50909695505050505050565b60008060006060848603121561164b57600080fd5b611654846115a8565b9250611662602085016115a8565b9150604084013590509250925092565b60006020828403121561168457600080fd5b610c6b826115a8565b815161ffff1681526102c0810160208301516116af602084018261ffff169052565b5060408301516116c5604084018261ffff169052565b5060608301516116db606084018261ffff169052565b5060808301516116f1608084018261ffff169052565b5060a083015161170760a084018261ffff169052565b5060c083015161171d60c084018261ffff169052565b5060e083015161173360e084018261ffff169052565b506101008381015161ffff90811691840191909152610120808501518216908401526101408085015182169084015261016080850151821690840152610180808501518216908401526101a0808501518216908401526101c0808501518216908401526101e08085015182169084015261020080850151821690840152610220808501518216908401526102408085015182169084015261026080850151821690840152610280808501518216908401526102a09384015116929091019190915290565b6000806040838503121561180a57600080fd5b611813836115a8565b91506020830135801515811461182857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561185f57600080fd5b611868856115a8565b9350611876602086016115a8565b925060408501359150606085013567ffffffffffffffff8082111561189a57600080fd5b818701915087601f8301126118ae57600080fd5b8135818111156118c0576118c0611833565b604051601f8201601f19908116603f011681019083821181831017156118e8576118e8611833565b816040528281528a602084870101111561190157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561193857600080fd5b611941836115a8565b915061194f602084016115a8565b90509250929050565b600181811c9082168061196c57607f821691505b60208210810361198c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516119f181846020880161152c565b835190830190611a0581836020880161152c565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ad890830184611550565b9695505050505050565b600060208284031215611af457600080fd5b8151610c6b816114f956fea2646970667358221220cf8cc49d58f20593a36d9738200f4317dd94b3b86498eddf4dee65f4ef8128d364736f6c63430008130033';

type NiftyLeagueCharacterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: NiftyLeagueCharacterConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class NiftyLeagueCharacter__factory extends ContractFactory {
  constructor(...args: NiftyLeagueCharacterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    nftlAddress: AddressLike,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(nftlAddress, name, symbol, overrides || {});
  }
  override deploy(
    nftlAddress: AddressLike,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(nftlAddress, name, symbol, overrides || {}) as Promise<
      NiftyLeagueCharacter & { deploymentTransaction(): ContractTransactionResponse }
    >;
  }
  override connect(runner: ContractRunner | null): NiftyLeagueCharacter__factory {
    return super.connect(runner) as NiftyLeagueCharacter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NiftyLeagueCharacterInterface {
    return new Interface(_abi) as NiftyLeagueCharacterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NiftyLeagueCharacter {
    return new Contract(address, _abi, runner) as unknown as NiftyLeagueCharacter;
  }
}
