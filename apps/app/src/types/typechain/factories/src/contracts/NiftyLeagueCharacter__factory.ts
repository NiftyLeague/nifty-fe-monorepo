/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers6';
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from 'ethers6';
import type { NonPayableOverrides } from '../../../common';
import type { NiftyLeagueCharacter, NiftyLeagueCharacterInterface } from '../../../src/contracts/NiftyLeagueCharacter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'nftlAddress',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getCharacterTraits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'tribe',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'skinColor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'furColor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'eyeColor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'pupilColor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'hair',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'mouth',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'beard',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'top',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'outerwear',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'print',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'bottom',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'footwear',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'belt',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'hat',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'eyewear',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'piercing',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'wrist',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'hands',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'neckwear',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'leftItem',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'rightItem',
            type: 'uint16',
          },
        ],
        internalType: 'struct NiftyLeagueCharacter.CharacterTraits',
        name: '_characterTraits',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRemovedTraits',
    outputs: [
      {
        internalType: 'uint16[]',
        name: '',
        type: 'uint16[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'trait',
        type: 'uint256',
      },
    ],
    name: 'isAvailableTrait',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'traitCombo',
        type: 'uint256',
      },
    ],
    name: 'isUnique',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pauseMinting',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpauseMinting',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a06040523480156200001157600080fd5b5060405162001e9138038062001e9183398101604081905262000034916200026a565b8151829082906200004d906000906020850190620000f7565b50805162000063906001906020840190620000f7565b505050620000806200007a620000a160201b60201c565b620000a5565b50506006805460ff60a01b191690556001600160a01b031660805262000331565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010590620002f4565b90600052602060002090601f01602090048101928262000129576000855562000174565b82601f106200014457805160ff191683800117855562000174565b8280016001018555821562000174579182015b828111156200017457825182559160200191906001019062000157565b506200018292915062000186565b5090565b5b8082111562000182576000815560010162000187565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001c557600080fd5b81516001600160401b0380821115620001e257620001e26200019d565b604051601f8301601f19908116603f011681019082821181831017156200020d576200020d6200019d565b816040528381526020925086838588010111156200022a57600080fd5b600091505b838210156200024e57858201830151818301840152908201906200022f565b83821115620002605760008385830101525b9695505050505050565b6000806000606084860312156200028057600080fd5b83516001600160a01b03811681146200029857600080fd5b60208501519093506001600160401b0380821115620002b657600080fd5b620002c487838801620001b3565b93506040860151915080821115620002db57600080fd5b50620002ea86828701620001b3565b9150509250925092565b600181811c908216806200030957607f821691505b602082108114156200032b57634e487b7160e01b600052602260045260246000fd5b50919050565b608051611b476200034a60003960005050611b476000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063ae2003221161007c578063ae200322146102ff578063b88d4fde14610307578063c87b56dd1461031a578063da8fbf2a1461032d578063e985e9c514610335578063f2fde38b1461037157600080fd5b806370a082311461028a578063715018a6146102ab5780638da5cb5b146102b357806395d89b41146102c45780639b046ed3146102cc578063a22cb465146102ec57600080fd5b806317bed2c51161011557806317bed2c51461022257806323b872dd146102375780633ccfd60b1461024a57806342842e0e146102525780635c975abb146102655780636352211e1461027757600080fd5b806301ffc9a71461015d57806306fdde03146101855780630750d2fb1461019a578063081812fc146101be578063095ea7b3146101e95780631656efc6146101fe575b600080fd5b61017061016b366004611518565b610384565b60405190151581526020015b60405180910390f35b61018d6103d6565b60405161017c919061158d565b6101706101a83660046115a0565b60009081526008602052604090205460ff161590565b6101d16101cc3660046115a0565b610468565b6040516001600160a01b03909116815260200161017c565b6101fc6101f73660046115d5565b61048f565b005b61017061020c3660046115a0565b60009081526009602052604090205460ff161590565b61022a6105aa565b60405161017c91906115ff565b6101fc610245366004611647565b610629565b6101fc61065a565b6101fc610260366004611647565b610695565b600654600160a01b900460ff16610170565b6101d16102853660046115a0565b6106b0565b61029d610298366004611683565b610710565b60405190815260200161017c565b6101fc610796565b6006546001600160a01b03166101d1565b61018d6107aa565b6102df6102da3660046115a0565b6107b9565b60405161017c919061169e565b6101fc6102fa366004611808565b610bac565b6101fc610bb7565b6101fc61031536600461185a565b610bc7565b61018d6103283660046115a0565b610bff565b6101fc610c73565b610170610343366004611936565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101fc61037f366004611683565b610c83565b60006001600160e01b031982166380ac58cd60e01b14806103b557506001600160e01b03198216635b5e139f60e01b145b806103d057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103e590611969565b80601f016020809104026020016040519081016040528092919081815260200182805461041190611969565b801561045e5780601f106104335761010080835404028352916020019161045e565b820191906000526020600020905b81548152906001019060200180831161044157829003601f168201915b5050505050905090565b600061047382610cfc565b506000908152600460205260409020546001600160a01b031690565b600061049a826106b0565b9050806001600160a01b0316836001600160a01b0316141561050d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061052957506105298133610343565b61059b5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610504565b6105a58383610d5b565b505050565b6060600a80548060200260200160405190810160405280929190818152602001828054801561045e57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116105e75790505050505050905090565b6106333382610dc9565b61064f5760405162461bcd60e51b8152600401610504906119a4565b6105a5838383610e48565b610662610fac565b6040514790339082156108fc029083906000818181858888f19350505050158015610691573d6000803e3d6000fd5b5050565b6105a583838360405180602001604052806000815250610bc7565b6000818152600260205260408120546001600160a01b0316806103d05760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610504565b60006001600160a01b03821661077a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610504565b506001600160a01b031660009081526003602052604090205490565b61079e610fac565b6107a86000611006565b565b6060600180546103e590611969565b604080516102c08101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301829052610160830182905261018083018290526101a083018290526101c083018290526101e08301829052610200830182905261022083018290526102408301829052610260830182905261028083018290526102a083018290528482526002905291909120546001600160a01b03166108bf5760405162461bcd60e51b81526020600482015260116024820152703737b732bc34b9ba32b73a103a37b5b2b760791b6044820152606401610504565b600060076000848152602001908152602001600020604051806040016040529081600082015481526020016001820180546108f990611969565b80601f016020809104026020016040519081016040528092919081815260200182805461092590611969565b80156109725780601f1061094757610100808354040283529160200191610972565b820191906000526020600020905b81548152906001019060200180831161095557829003601f168201915b5050509190925250508151919250506103ff1661ffff168252805161099b90600a1c6103ff1690565b61ffff16602083015280516109b49060141c6103ff1690565b61ffff16604083015280516109cd90601e1c6103ff1690565b61ffff16606083015280516109e69060281c6103ff1690565b61ffff16608083015280516109ff9060321c6103ff1690565b61ffff1660a08301528051610a1890603c1c6103ff1690565b61ffff1660c08301528051610a319060461c6103ff1690565b61ffff1660e08301528051610a4a9060501c6103ff1690565b61ffff166101008301528051610a6490605a1c6103ff1690565b61ffff166101208301528051610a7e9060641c6103ff1690565b61ffff166101408301528051610a9890606e1c6103ff1690565b61ffff166101608301528051610ab29060781c6103ff1690565b61ffff166101808301528051610acc9060821c6103ff1690565b61ffff166101a08301528051610ae690608c1c6103ff1690565b61ffff166101c08301528051610b009060961c6103ff1690565b61ffff166101e08301528051610b1a9060a01c6103ff1690565b61ffff166102008301528051610b349060aa1c6103ff1690565b61ffff166102208301528051610b4e9060b41c6103ff1690565b61ffff166102408301528051610b689060be1c6103ff1690565b61ffff166102608301528051610b829060c81c6103ff1690565b61ffff166102808301528051610b9c9060d21c6103ff1690565b61ffff166102a083015250919050565b610691338383611058565b610bbf610fac565b6107a8611127565b610bd13383610dc9565b610bed5760405162461bcd60e51b8152600401610504906119a4565b610bf98484848461117c565b50505050565b6060610c0a82610cfc565b6000610c2160408051602081019091526000815290565b90506000815111610c415760405180602001604052806000815250610c6c565b80610c4b846111af565b604051602001610c5c9291906119f1565b6040516020818303038152906040525b9392505050565b610c7b610fac565b6107a861124c565b610c8b610fac565b6001600160a01b038116610cf05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610504565b610cf981611006565b50565b6000818152600260205260409020546001600160a01b0316610cf95760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610504565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d90826106b0565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610dd5836106b0565b9050806001600160a01b0316846001600160a01b03161480610e1c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610e405750836001600160a01b0316610e3584610468565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e5b826106b0565b6001600160a01b031614610e815760405162461bcd60e51b815260040161050490611a20565b6001600160a01b038216610ee35760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610504565b826001600160a01b0316610ef6826106b0565b6001600160a01b031614610f1c5760405162461bcd60e51b815260040161050490611a20565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146107a85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610504565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156110ba5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610504565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61112f61128f565b6006805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b611187848484610e48565b611193848484846112df565b610bf95760405162461bcd60e51b815260040161050490611a65565b606060006111bc836113dd565b600101905060008167ffffffffffffffff8111156111dc576111dc611844565b6040519080825280601f01601f191660200182016040528015611206576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461123f57611244565b611210565b509392505050565b6112546114b5565b6006805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861115f3390565b600654600160a01b900460ff166107a85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610504565b60006001600160a01b0384163b156113d257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611323903390899088908890600401611ab7565b6020604051808303816000875af192505050801561135e575060408051601f3d908101601f1916820190925261135b91810190611af4565b60015b6113b8573d80801561138c576040519150601f19603f3d011682016040523d82523d6000602084013e611391565b606091505b5080516113b05760405162461bcd60e51b815260040161050490611a65565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e40565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061141c5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611448576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061146657662386f26fc10000830492506010015b6305f5e100831061147e576305f5e100830492506008015b612710831061149257612710830492506004015b606483106114a4576064830492506002015b600a83106103d05760010192915050565b600654600160a01b900460ff16156107a85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610504565b6001600160e01b031981168114610cf957600080fd5b60006020828403121561152a57600080fd5b8135610c6c81611502565b60005b83811015611550578181015183820152602001611538565b83811115610bf95750506000910152565b60008151808452611579816020860160208601611535565b601f01601f19169290920160200192915050565b602081526000610c6c6020830184611561565b6000602082840312156115b257600080fd5b5035919050565b80356001600160a01b03811681146115d057600080fd5b919050565b600080604083850312156115e857600080fd5b6115f1836115b9565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561163b57835161ffff168352928401929184019160010161161b565b50909695505050505050565b60008060006060848603121561165c57600080fd5b611665846115b9565b9250611673602085016115b9565b9150604084013590509250925092565b60006020828403121561169557600080fd5b610c6c826115b9565b815161ffff1681526102c0810160208301516116c0602084018261ffff169052565b5060408301516116d6604084018261ffff169052565b5060608301516116ec606084018261ffff169052565b506080830151611702608084018261ffff169052565b5060a083015161171860a084018261ffff169052565b5060c083015161172e60c084018261ffff169052565b5060e083015161174460e084018261ffff169052565b506101008381015161ffff90811691840191909152610120808501518216908401526101408085015182169084015261016080850151821690840152610180808501518216908401526101a0808501518216908401526101c0808501518216908401526101e08085015182169084015261020080850151821690840152610220808501518216908401526102408085015182169084015261026080850151821690840152610280808501518216908401526102a09384015116929091019190915290565b6000806040838503121561181b57600080fd5b611824836115b9565b91506020830135801515811461183957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561187057600080fd5b611879856115b9565b9350611887602086016115b9565b925060408501359150606085013567ffffffffffffffff808211156118ab57600080fd5b818701915087601f8301126118bf57600080fd5b8135818111156118d1576118d1611844565b604051601f8201601f19908116603f011681019083821181831017156118f9576118f9611844565b816040528281528a602084870101111561191257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561194957600080fd5b611952836115b9565b9150611960602084016115b9565b90509250929050565b600181811c9082168061197d57607f821691505b6020821081141561199e57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611a03818460208801611535565b835190830190611a17818360208801611535565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611aea90830184611561565b9695505050505050565b600060208284031215611b0657600080fd5b8151610c6c8161150256fea26469706673582212207a9c7bd920865c9aeabdabee582245e2a5cfefca8391034d361cf0c4953fbfe664736f6c634300080b0033';

type NiftyLeagueCharacterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: NiftyLeagueCharacterConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class NiftyLeagueCharacter__factory extends ContractFactory {
  constructor(...args: NiftyLeagueCharacterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    nftlAddress: AddressLike,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(nftlAddress, name, symbol, overrides || {});
  }
  override deploy(
    nftlAddress: AddressLike,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(nftlAddress, name, symbol, overrides || {}) as Promise<
      NiftyLeagueCharacter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NiftyLeagueCharacter__factory {
    return super.connect(runner) as NiftyLeagueCharacter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NiftyLeagueCharacterInterface {
    return new Interface(_abi) as NiftyLeagueCharacterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NiftyLeagueCharacter {
    return new Contract(address, _abi, runner) as unknown as NiftyLeagueCharacter;
  }
}
