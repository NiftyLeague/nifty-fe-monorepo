/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers6';
import type { Signer, BytesLike, AddressLike, ContractDeployTransaction, ContractRunner } from 'ethers6';
import type { NonPayableOverrides } from '../../../../common';
import type { MerkleDistributor, MerkleDistributorInterface } from '../../../../src/contracts/lib/MerkleDistributor';

const _abi = [
  {
    inputs: [
      { internalType: 'address', name: 'token_', type: 'address' },
      { internalType: 'bytes32', name: 'merkleRoot_', type: 'bytes32' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'AlreadyClaimed', type: 'error' },
  { inputs: [], name: 'InvalidProof', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'index', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'account', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'Claimed',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'index', type: 'uint256' },
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
      { internalType: 'bytes32[]', name: 'merkleProof', type: 'bytes32[]' },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],
    name: 'isClaimed',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'merkleRoot',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'token',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c060405234801561001057600080fd5b5060405161090838038061090883398101604081905261002f91610045565b6001600160a01b0390911660805260a05261007f565b6000806040838503121561005857600080fd5b82516001600160a01b038116811461006f57600080fd5b6020939093015192949293505050565b60805160a0516108586100b060003960008181606b01526101a901526000818160c8015261020701526108586000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e7ba6ef146100515780632eb4a7ab146100665780639e34070f146100a0578063fc0c546a146100c3575b600080fd5b61006461005f366004610654565b610102565b005b61008d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100b36100ae3660046106f9565b61027f565b6040519015158152602001610097565b6100ea7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610097565b61010b8561027f565b1561012957604051630c8d9eab60e31b815260040160405180910390fd5b60408051602081018790526bffffffffffffffffffffffff19606087901b1691810191909152605481018490526000906074016040516020818303038152906040528051906020012090506101d48383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506102c09050565b6101f1576040516309bde33960e01b815260040160405180910390fd5b6101fa866102d6565b61022e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168686610314565b604080518781526001600160a01b03871660208201529081018590527f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed0269060600160405180910390a1505050505050565b60008061028e61010084610728565b9050600061029e6101008561073c565b60009283526020839052604090922054600190921b9182169091149392505050565b6000826102cd858461036b565b14949350505050565b60006102e461010083610728565b905060006102f46101008461073c565b6000928352602083905260409092208054600190931b9092179091555050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103669084906103b8565b505050565b600081815b84518110156103b05761039c8286838151811061038f5761038f610750565b6020026020010151610492565b9150806103a881610766565b915050610370565b509392505050565b600061040d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104c49092919063ffffffff16565b905080516000148061042e57508080602001905181019061042e919061078d565b6103665760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b60008183106104ae5760008281526020849052604090206104bd565b60008381526020839052604090205b9392505050565b60606104d384846000856104db565b949350505050565b60608247101561053c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610489565b600080866001600160a01b0316858760405161055891906107d3565b60006040518083038185875af1925050503d8060008114610595576040519150601f19603f3d011682016040523d82523d6000602084013e61059a565b606091505b50915091506105ab878383876105b6565b979650505050505050565b6060831561062557825160000361061e576001600160a01b0385163b61061e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610489565b50816104d3565b6104d3838381511561063a5781518083602001fd5b8060405162461bcd60e51b815260040161048991906107ef565b60008060008060006080868803121561066c57600080fd5b8535945060208601356001600160a01b038116811461068a57600080fd5b935060408601359250606086013567ffffffffffffffff808211156106ae57600080fd5b818801915088601f8301126106c257600080fd5b8135818111156106d157600080fd5b8960208260051b85010111156106e657600080fd5b9699959850939650602001949392505050565b60006020828403121561070b57600080fd5b5035919050565b634e487b7160e01b600052601260045260246000fd5b60008261073757610737610712565b500490565b60008261074b5761074b610712565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001820161078657634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121561079f57600080fd5b815180151581146104bd57600080fd5b60005b838110156107ca5781810151838201526020016107b2565b50506000910152565b600082516107e58184602087016107af565b9190910192915050565b602081526000825180602084015261080e8160408501602087016107af565b601f01601f1916919091016040019291505056fea2646970667358221220954378e7fb4a25d60193612cd1d2dbff998c6dd10c39c562d3de2704bd1de55c64736f6c63430008130033';

type MerkleDistributorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MerkleDistributorConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class MerkleDistributor__factory extends ContractFactory {
  constructor(...args: MerkleDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    token_: AddressLike,
    merkleRoot_: BytesLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(token_, merkleRoot_, overrides || {});
  }
  override deploy(token_: AddressLike, merkleRoot_: BytesLike, overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(token_, merkleRoot_, overrides || {}) as Promise<
      MerkleDistributor & { deploymentTransaction(): ContractTransactionResponse }
    >;
  }
  override connect(runner: ContractRunner | null): MerkleDistributor__factory {
    return super.connect(runner) as MerkleDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleDistributorInterface {
    return new Interface(_abi) as MerkleDistributorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MerkleDistributor {
    return new Contract(address, _abi, runner) as unknown as MerkleDistributor;
  }
}
